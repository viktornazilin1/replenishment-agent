{
  "version": 3,
  "sources": ["../../@ui5/webcomponents-base/src/util/AccessibilityTextsHelper.ts"],
  "sourcesContent": ["import type UI5Element from \"../UI5Element.js\";\nimport type { ChangeInfo } from \"../UI5Element.js\";\n\ntype InvalidateCallback = (changeInfo: ChangeInfo) => void;\ntype MutationCallback = () => void;\ntype AssociatedElement = {\n\tobserver: MutationObserver | null;\n\tcallbacks: Array<MutationCallback>;\n};\ntype RegisteredElement = {\n\thost: UI5Element;\n\tobservedElements: Array<HTMLElement>;\n\tcallback: MutationCallback;\n\tinvalidationCallback: InvalidateCallback;\n};\n\nconst associatedElements = new WeakMap<HTMLElement, AssociatedElement>();\nconst registeredElements = new WeakMap<UI5Element, RegisteredElement>();\n\ntype AccessibleElement = HTMLElement & {\n\taccessibleNameRef?: string;\n\taccessibleName?: string;\n\taccessibleDescriptionRef?: string;\n\taccessibleDescription?: string;\n};\n\nconst observerOptions = {\n\tattributes: true,\n\tchildList: true,\n\tcharacterData: true,\n\tsubtree: true,\n};\n\nconst getEffectiveAriaLabelText = (el: HTMLElement) => {\n\tconst accessibleEl = el as AccessibleElement;\n\n\tif (!accessibleEl.accessibleNameRef) {\n\t\tif (accessibleEl.accessibleName) {\n\t\t\treturn accessibleEl.accessibleName;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\treturn getAllAccessibleNameRefTexts(el);\n};\n\n/**\n *\n * @param {HTMLElement} el Defines the HTMLElement, for which you need to get all related texts\n */\nconst getAllAccessibleNameRefTexts = (el: HTMLElement) => {\n\tconst ids = (el as AccessibleElement).accessibleNameRef?.split(\" \") ?? [];\n\tlet result = \"\";\n\n\tids.forEach((elementId: string, index: number) => {\n\t\tconst element = _getReferencedElementById(el, elementId);\n\t\tconst text = `${element && element.textContent ? element.textContent : \"\"}`;\n\t\tif (text) {\n\t\t\tresult += text;\n\t\t\tif (index < ids.length - 1) {\n\t\t\t\tresult += \" \";\n\t\t\t}\n\t\t}\n\t});\n\n\treturn result;\n};\n\nconst _getAllAssociatedElementsFromDOM = (el: UI5Element): Array<HTMLElement> => {\n\tconst set = new Set<HTMLElement>();\n\t// adding labels with attribute for matching the el.id\n\tconst labelsForAssociated = _getAssociatedLabels(el);\n\tlabelsForAssociated.forEach(itm => {\n\t\tset.add(itm);\n\t});\n\t// adding other elements that id is the same as accessibleNameRef value\n\tconst ariaLabelledBy = el[\"accessibleNameRef\" as keyof typeof el] as string;\n\tconst ariaDescribedBy = el[\"accessibleDescriptionRef\" as keyof typeof el] as string;\n\n\tconst value = [ariaLabelledBy, ariaDescribedBy].filter(Boolean).join(\" \");\n\n\tconst ids = value ? value.split(\" \") : [];\n\tids.forEach(id => {\n\t\tconst refEl = _getReferencedElementById(el, id);\n\t\tif (refEl) {\n\t\t\tset.add(refEl);\n\t\t}\n\t});\n\treturn Array.from(set);\n};\n\nconst _getAssociatedLabels = (el: HTMLElement): Array<HTMLElement> => {\n\tconst labels = (el.getRootNode() as HTMLElement).querySelectorAll<HTMLElement>(`[for=\"${el.id}\"]`);\n\treturn Array.from(labels);\n};\n\nconst _getReferencedElementById = (el: HTMLElement, elementId: string): HTMLElement | null => {\n\treturn (el.getRootNode() as HTMLElement).querySelector<HTMLElement>(`[id='${elementId}']`) || document.getElementById(elementId);\n};\n\n/**\n * @param {HTMLElement} el Defines the HTMLElement, for which you need to get all related \"label for\" texts\n */\nconst getAssociatedLabelForTexts = (el: HTMLElement) => {\n\tconst results: Array<string> = [];\n\tconst labels = _getAssociatedLabels(el);\n\n\tlabels.forEach((label: HTMLElement) => {\n\t\tconst labelText = label.textContent;\n\t\tlabelText && results.push(labelText);\n\t});\n\n\tif (results.length) {\n\t\treturn results.join(\" \");\n\t}\n\n\treturn undefined;\n};\n\nconst _createInvalidationCallback = (el: UI5Element) => {\n\tconst invalidationCallback = (changeInfo: ChangeInfo) => {\n\t\tconst isAccessibleNameRefChange = changeInfo && changeInfo.type === \"property\" && changeInfo.name === \"accessibleNameRef\";\n\t\tconst isAccessibleDescriptionRefChange = changeInfo && changeInfo.type === \"property\" && changeInfo.name === \"accessibleDescriptionRef\";\n\t\tif (!isAccessibleNameRefChange && !isAccessibleDescriptionRefChange) {\n\t\t\treturn;\n\t\t}\n\t\tconst registeredElement = registeredElements.get(el);\n\t\tif (!registeredElement) {\n\t\t\treturn;\n\t\t}\n\t\tconst oldAssociatedElements = registeredElement.observedElements;\n\t\tconst newAssociatedElements = _getAllAssociatedElementsFromDOM(el);\n\t\toldAssociatedElements.forEach(oldElement => {\n\t\t\tif (!newAssociatedElements.includes(oldElement)) {\n\t\t\t\t_removeObservedElementFromRegisteredElement(registeredElement, oldElement);\n\t\t\t}\n\t\t});\n\t\tnewAssociatedElements.forEach(newElement => {\n\t\t\tif (!oldAssociatedElements.includes(newElement)) {\n\t\t\t\t_addObservedElementToRegisteredElement(registeredElement, newElement);\n\t\t\t\tregisteredElement.observedElements.push(newElement);\n\t\t\t}\n\t\t});\n\t\tregisteredElement?.callback();\n\t};\n\treturn invalidationCallback;\n};\n\nconst registerUI5Element = (el: UI5Element, callback: MutationCallback) => {\n\tif (registeredElements.has(el)) {\n\t\treturn;\n\t}\n\tconst allAssociatedElements = _getAllAssociatedElementsFromDOM(el);\n\tconst invalidationCallback = _createInvalidationCallback(el);\n\tconst registeredElement = {\n\t\thost: el,\n\t\tobservedElements: allAssociatedElements,\n\t\tcallback,\n\t\tinvalidationCallback,\n\t};\n\tregisteredElements.set(el, registeredElement);\n\tel.attachInvalidate(invalidationCallback);\n\n\tallAssociatedElements.forEach((element: HTMLElement) => {\n\t\t_addObservedElementToRegisteredElement(registeredElement, element);\n\t});\n\tcallback();\n};\n\nconst _addObservedElementToRegisteredElement = (registeredElement: RegisteredElement, element: HTMLElement) => {\n\tlet associatedElement = associatedElements.get(element);\n\tif (!associatedElement) {\n\t\tassociatedElement = { observer: null, callbacks: [] };\n\t\tconst observer = new MutationObserver(() => {\n\t\t\tconst callbacks = (associatedElement as AssociatedElement).callbacks;\n\t\t\tcallbacks.forEach(callback => {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\tconst domEl = document.getElementById(element.id);\n\t\t\t// if no longer should be observed from this registeredElement, remove it\n\t\t\tif (!(registeredElement.host.id === element.getAttribute(\"for\") || domEl)) {\n\t\t\t\t_removeObservedElementFromRegisteredElement(registeredElement, element);\n\t\t\t}\n\t\t});\n\t\tassociatedElement.observer = observer;\n\t\tobserver.observe(element, observerOptions);\n\t\tassociatedElements.set(element, associatedElement);\n\t}\n\tif (!associatedElement.callbacks.includes(registeredElement.callback)) {\n\t\tassociatedElement.callbacks.push(registeredElement.callback);\n\t}\n};\n\nconst _removeObservedElementFromRegisteredElement = (registeredElement: RegisteredElement, element: HTMLElement) => {\n\tconst associatedElement = associatedElements.get(element);\n\tif (associatedElement) {\n\t\tassociatedElement.callbacks = associatedElement.callbacks.filter(itm => itm !== registeredElement.callback);\n\t\tif (!associatedElement.callbacks.length) {\n\t\t\tassociatedElement.observer?.disconnect();\n\t\t\tassociatedElements.delete(element);\n\t\t}\n\t}\n\tregisteredElement.observedElements = registeredElement.observedElements.filter(itm => itm !== element);\n};\n\nconst deregisterUI5Element = (el: UI5Element) => {\n\tconst registeredElement = registeredElements.get(el);\n\tif (!registeredElement) {\n\t\treturn;\n\t}\n\tconst oldObservedElements = [...registeredElement.observedElements];\n\toldObservedElements.forEach(observedElement => {\n\t\t_removeObservedElementFromRegisteredElement(registeredElement, observedElement);\n\t});\n\tel.detachInvalidate(registeredElement.invalidationCallback);\n\tregisteredElements.delete(el);\n};\n\nconst getEffectiveAriaDescriptionText = (el: HTMLElement) => {\n\tconst accessibleEl = el as AccessibleElement;\n\n\tif (!accessibleEl.accessibleDescriptionRef) {\n\t\tif (accessibleEl.accessibleDescription) {\n\t\t\treturn accessibleEl.accessibleDescription;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\treturn getAllAccessibleDescriptionRefTexts(el);\n};\n\nconst getAllAccessibleDescriptionRefTexts = (el: HTMLElement) => {\n\tconst ids = (el as AccessibleElement).accessibleDescriptionRef?.split(\" \") ?? [];\n\tlet result = \"\";\n\n\tids.forEach((elementId: string, index: number) => {\n\t\tconst element = _getReferencedElementById(el, elementId);\n\t\tconst text = `${element && element.textContent ? element.textContent : \"\"}`;\n\t\tif (text) {\n\t\t\tresult += text;\n\t\t\tif (index < ids.length - 1) {\n\t\t\t\tresult += \" \";\n\t\t\t}\n\t\t}\n\t});\n\n\treturn result;\n};\n\nexport {\n\tgetEffectiveAriaLabelText,\n\tgetAssociatedLabelForTexts,\n\tregisterUI5Element,\n\tderegisterUI5Element,\n\tgetAllAccessibleNameRefTexts,\n\tgetEffectiveAriaDescriptionText,\n\tgetAllAccessibleDescriptionRefTexts,\n};\n"],
  "mappings": "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",
  "names": []
}
