import {
  getEffectiveAriaLabelText
} from "./chunk-BW2OWWR5.js";
import {
  BUTTON_ARIA_TYPE_ACCEPT,
  BUTTON_ARIA_TYPE_EMPHASIZED,
  BUTTON_ARIA_TYPE_REJECT,
  i18n_default
} from "./chunk-WZO5IFLR.js";
import {
  Icon_default,
  event_strict_default,
  getIconAccessibleName
} from "./chunk-4CSORQWJ.js";
import {
  isEnter,
  isEscape,
  isShift,
  isSpace,
  slot_default
} from "./chunk-ZXYB53A5.js";
import {
  Fragment,
  JsxRenderer_default,
  UI5Element_default,
  customElement_default,
  getEnableDefaultTooltips,
  isDesktop,
  isSafari,
  jsx,
  jsxs,
  parameters_bundle_css_default,
  parameters_bundle_css_default2,
  property_default,
  registerThemePropertiesLoader,
  resetForm,
  submitForm
} from "./chunk-NS46QOBH.js";

// node_modules/@ui5/webcomponents-base/dist/util/willShowContent.js
var willShowContent = (childNodes) => {
  return Array.from(childNodes).filter((node) => {
    return node.nodeType !== Node.COMMENT_NODE && (node.nodeType !== Node.TEXT_NODE || (node.nodeValue || "").trim().length !== 0);
  }).length > 0;
};
var willShowContent_default = willShowContent;

// node_modules/@ui5/webcomponents-base/dist/config/Tooltips.js
var _enableDefaultTooltips;
var getEnableDefaultTooltips2 = () => {
  if (_enableDefaultTooltips === void 0) {
    _enableDefaultTooltips = getEnableDefaultTooltips();
  }
  return _enableDefaultTooltips;
};

// node_modules/@ui5/webcomponents-base/dist/util/toLowercaseEnumValue.js
function toLowercaseEnumValue(value) {
  return value.toLowerCase();
}

// node_modules/@ui5/webcomponents/dist/types/ButtonDesign.js
var ButtonDesign;
(function(ButtonDesign2) {
  ButtonDesign2["Default"] = "Default";
  ButtonDesign2["Positive"] = "Positive";
  ButtonDesign2["Negative"] = "Negative";
  ButtonDesign2["Transparent"] = "Transparent";
  ButtonDesign2["Emphasized"] = "Emphasized";
  ButtonDesign2["Attention"] = "Attention";
})(ButtonDesign || (ButtonDesign = {}));
var ButtonDesign_default = ButtonDesign;

// node_modules/@ui5/webcomponents/dist/types/ButtonType.js
var ButtonType;
(function(ButtonType2) {
  ButtonType2["Button"] = "Button";
  ButtonType2["Submit"] = "Submit";
  ButtonType2["Reset"] = "Reset";
})(ButtonType || (ButtonType = {}));
var ButtonType_default = ButtonType;

// node_modules/@ui5/webcomponents/dist/types/ButtonBadgeDesign.js
var ButtonBadgeDesign;
(function(ButtonBadgeDesign2) {
  ButtonBadgeDesign2["InlineText"] = "InlineText";
  ButtonBadgeDesign2["OverlayText"] = "OverlayText";
  ButtonBadgeDesign2["AttentionDot"] = "AttentionDot";
})(ButtonBadgeDesign || (ButtonBadgeDesign = {}));
var ButtonBadgeDesign_default = ButtonBadgeDesign;

// node_modules/@ui5/webcomponents/dist/ButtonTemplate.js
function ButtonTemplate(injectedProps) {
  var _a, _b, _c;
  return jsx(Fragment, { children: jsxs("button", { type: "button", class: {
    "ui5-button-root": true,
    "ui5-button-badge-placement-end": ((_a = this.badge[0]) == null ? void 0 : _a.design) === "InlineText",
    "ui5-button-badge-placement-end-top": ((_b = this.badge[0]) == null ? void 0 : _b.design) === "OverlayText",
    "ui5-button-badge-dot": ((_c = this.badge[0]) == null ? void 0 : _c.design) === "AttentionDot"
  }, disabled: this.disabled, "data-sap-focus-ref": true, "aria-pressed": injectedProps == null ? void 0 : injectedProps.ariaPressed, "aria-valuemin": injectedProps == null ? void 0 : injectedProps.ariaValueMin, "aria-valuemax": injectedProps == null ? void 0 : injectedProps.ariaValueMax, "aria-valuenow": injectedProps == null ? void 0 : injectedProps.ariaValueNow, "aria-valuetext": injectedProps == null ? void 0 : injectedProps.ariaValueText, onFocusOut: this._onfocusout, onClick: this._onclick, onMouseDown: this._onmousedown, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onTouchStart: this._ontouchstart, onTouchEnd: this._ontouchend, tabindex: this.tabIndexValue, "aria-expanded": this.accessibilityAttributes.expanded, "aria-controls": this.accessibilityAttributes.controls, "aria-haspopup": this._hasPopup, "aria-label": this.ariaLabelText, "aria-describedby": this.ariaDescribedbyText, "aria-description": this.ariaDescriptionText, title: this.buttonTitle, part: "button", role: this.effectiveAccRole, children: [this.icon && jsx(Icon_default, { class: "ui5-button-icon", name: this.icon, mode: "Decorative", part: "icon", showTooltip: this.showIconTooltip }), jsx("span", { id: `${this._id}-content`, class: "ui5-button-text", children: jsx("bdi", { children: jsx("slot", {}) }) }), this.endIcon && jsx(Icon_default, { class: "ui5-button-end-icon", name: this.endIcon, mode: "Decorative", part: "endIcon" }), this.hasButtonType && jsx("span", { id: "ui5-button-hiddenText-type", "aria-hidden": "true", class: "ui5-hidden-text", children: this.buttonTypeText }), this.shouldRenderBadge && jsx("slot", { name: "badge" })] }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Button.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Button_css_default = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block}:host{min-width:var(--_ui5-v2-9-0_button_base_min_width);height:var(--_ui5-v2-9-0_button_base_height);line-height:normal;font-family:var(--_ui5-v2-9-0_button_fontFamily);font-size:var(--sapFontSize);text-shadow:var(--_ui5-v2-9-0_button_text_shadow);border-radius:var(--_ui5-v2-9-0_button_border_radius);cursor:pointer;background-color:var(--sapButton_Background);border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);color:var(--sapButton_TextColor);box-sizing:border-box;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-webkit-tap-highlight-color:transparent}.ui5-button-root{min-width:inherit;cursor:inherit;height:100%;width:100%;box-sizing:border-box;display:flex;justify-content:center;align-items:center;outline:none;padding:0 var(--_ui5-v2-9-0_button_base_padding);position:relative;background:transparent;border:none;color:inherit;text-shadow:inherit;font:inherit;white-space:inherit;overflow:inherit;text-overflow:inherit;letter-spacing:inherit;word-spacing:inherit;line-height:inherit;-webkit-user-select:none;-moz-user-select:none;user-select:none}:host(:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host(:not([hidden]):not([disabled]).ui5_hovered){background:var(--sapButton_Hover_Background);border:1px solid var(--sapButton_Hover_BorderColor);color:var(--sapButton_Hover_TextColor)}.ui5-button-icon,.ui5-button-end-icon{color:inherit;flex-shrink:0}.ui5-button-end-icon{margin-inline-start:var(--_ui5-v2-9-0_button_base_icon_margin)}:host([icon-only]:not([has-end-icon])) .ui5-button-root{min-width:auto;padding:0}:host([icon-only]) .ui5-button-text{display:none}.ui5-button-text{outline:none;position:relative;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([has-icon]:not(:empty)) .ui5-button-text{margin-inline-start:var(--_ui5-v2-9-0_button_base_icon_margin)}:host([has-end-icon]:not([has-icon]):empty) .ui5-button-end-icon{margin-inline-start:0}:host([disabled]){opacity:var(--sapContent_DisabledOpacity);pointer-events:unset;cursor:default}:host([has-icon]:not([icon-only]):not([has-end-icon])) .ui5-button-text{min-width:calc(var(--_ui5-v2-9-0_button_base_min_width) - var(--_ui5-v2-9-0_button_base_icon_margin) - 1rem)}:host([disabled]:active){pointer-events:none}:host([desktop]:not([active])) .ui5-button-root:focus-within:after,:host(:not([active])) .ui5-button-root:focus-visible:after,:host([desktop][active][design="Emphasized"]) .ui5-button-root:focus-within:after,:host([active][design="Emphasized"]) .ui5-button-root:focus-visible:after,:host([desktop][active]) .ui5-button-root:focus-within:before,:host([active]) .ui5-button-root:focus-visible:before{content:"";position:absolute;box-sizing:border-box;inset:.0625rem;border:var(--_ui5-v2-9-0_button_focused_border);border-radius:var(--_ui5-v2-9-0_button_focused_border_radius)}:host([desktop][active]) .ui5-button-root:focus-within:before,:host([active]) .ui5-button-root:focus-visible:before{border-color:var(--_ui5-v2-9-0_button_pressed_focused_border_color)}:host([design="Emphasized"][desktop]) .ui5-button-root:focus-within:after,:host([design="Emphasized"]) .ui5-button-root:focus-visible:after{border-color:var(--_ui5-v2-9-0_button_emphasized_focused_border_color)}:host([design="Emphasized"][desktop]) .ui5-button-root:focus-within:before,:host([design="Emphasized"]) .ui5-button-root:focus-visible:before{content:"";position:absolute;box-sizing:border-box;inset:.0625rem;border:var(--_ui5-v2-9-0_button_emphasized_focused_border_before);border-radius:var(--_ui5-v2-9-0_button_focused_border_radius)}.ui5-button-root::-moz-focus-inner{border:0}bdi{display:block;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([ui5-button][active]:not([disabled]):not([non-interactive])){background-image:none;background-color:var(--sapButton_Active_Background);border-color:var(--sapButton_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([design="Positive"]){background-color:var(--sapButton_Accept_Background);border-color:var(--sapButton_Accept_BorderColor);color:var(--sapButton_Accept_TextColor)}:host([design="Positive"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Positive"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Accept_Hover_Background);border-color:var(--sapButton_Accept_Hover_BorderColor);color:var(--sapButton_Accept_Hover_TextColor)}:host([ui5-button][design="Positive"][active]:not([non-interactive])){background-color:var(--sapButton_Accept_Active_Background);border-color:var(--sapButton_Accept_Active_BorderColor);color:var(--sapButton_Accept_Active_TextColor)}:host([design="Negative"]){background-color:var(--sapButton_Reject_Background);border-color:var(--sapButton_Reject_BorderColor);color:var(--sapButton_Reject_TextColor)}:host([design="Negative"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Negative"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Reject_Hover_Background);border-color:var(--sapButton_Reject_Hover_BorderColor);color:var(--sapButton_Reject_Hover_TextColor)}:host([ui5-button][design="Negative"][active]:not([non-interactive])){background-color:var(--sapButton_Reject_Active_Background);border-color:var(--sapButton_Reject_Active_BorderColor);color:var(--sapButton_Reject_Active_TextColor)}:host([design="Attention"]){background-color:var(--sapButton_Attention_Background);border-color:var(--sapButton_Attention_BorderColor);color:var(--sapButton_Attention_TextColor)}:host([design="Attention"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Attention"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Attention_Hover_Background);border-color:var(--sapButton_Attention_Hover_BorderColor);color:var(--sapButton_Attention_Hover_TextColor)}:host([ui5-button][design="Attention"][active]:not([non-interactive])){background-color:var(--sapButton_Attention_Active_Background);border-color:var(--sapButton_Attention_Active_BorderColor);color:var(--sapButton_Attention_Active_TextColor)}:host([design="Emphasized"]){background-color:var(--sapButton_Emphasized_Background);border-color:var(--sapButton_Emphasized_BorderColor);border-width:var(--_ui5-v2-9-0_button_emphasized_border_width);color:var(--sapButton_Emphasized_TextColor);font-family:var(--sapFontBoldFamily )}:host([design="Emphasized"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Emphasized"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Emphasized_Hover_Background);border-color:var(--sapButton_Emphasized_Hover_BorderColor);border-width:var(--_ui5-v2-9-0_button_emphasized_border_width);color:var(--sapButton_Emphasized_Hover_TextColor)}:host([ui5-button][design="Empasized"][active]:not([non-interactive])){background-color:var(--sapButton_Emphasized_Active_Background);border-color:var(--sapButton_Emphasized_Active_BorderColor);color:var(--sapButton_Emphasized_Active_TextColor)}:host([design="Emphasized"][desktop]) .ui5-button-root:focus-within:after,:host([design="Emphasized"]) .ui5-button-root:focus-visible:after{border-color:var(--_ui5-v2-9-0_button_emphasized_focused_border_color);outline:none}:host([design="Emphasized"][desktop][active]:not([non-interactive])) .ui5-button-root:focus-within:after,:host([design="Emphasized"][active]:not([non-interactive])) .ui5-button-root:focus-visible:after{border-color:var(--_ui5-v2-9-0_button_emphasized_focused_active_border_color)}:host([design="Transparent"]){background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor);border-color:var(--sapButton_Lite_BorderColor)}:host([design="Transparent"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Transparent"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Lite_Hover_Background);border-color:var(--sapButton_Lite_Hover_BorderColor);color:var(--sapButton_Lite_Hover_TextColor)}:host([ui5-button][design="Transparent"][active]:not([non-interactive])){background-color:var(--sapButton_Lite_Active_Background);border-color:var(--sapButton_Lite_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([ui5-segmented-button-item][active][desktop]) .ui5-button-root:focus-within:after,:host([ui5-segmented-button-item][active]) .ui5-button-root:focus-visible:after,:host([pressed][desktop]) .ui5-button-root:focus-within:after,:host([pressed]) .ui5-button-root:focus-visible:after{border-color:var(--_ui5-v2-9-0_button_pressed_focused_border_color);outline:none}:host([ui5-segmented-button-item][desktop]:not(:last-child)) .ui5-button-root:focus-within:after,:host([ui5-segmented-button-item]:not(:last-child)) .ui5-button-root:focus-visible:after{border-top-right-radius:var(--_ui5-v2-9-0_button_focused_inner_border_radius);border-bottom-right-radius:var(--_ui5-v2-9-0_button_focused_inner_border_radius)}:host([ui5-segmented-button-item][desktop]:not(:first-child)) .ui5-button-root:focus-within:after,:host([ui5-segmented-button-item]:not(:first-child)) .ui5-button-root:focus-visible:after{border-top-left-radius:var(--_ui5-v2-9-0_button_focused_inner_border_radius);border-bottom-left-radius:var(--_ui5-v2-9-0_button_focused_inner_border_radius)}::slotted([slot="badge"][design="InlineText"]){pointer-events:initial;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSmallSize);padding-inline-start:.25rem;--_ui5-v2-9-0-tag-height: .625rem}::slotted([slot="badge"][design="OverlayText"]){pointer-events:initial;position:absolute;top:0;inset-inline-end:0;margin:-.5rem;z-index:1000;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSmallSize);--_ui5-v2-9-0-tag-height: .625rem}::slotted([slot="badge"][design="AttentionDot"]){pointer-events:initial;content:"";position:absolute;top:0;inset-inline-end:0;margin:-.25rem;z-index:1000}:host(:state(has-overlay-badge)){overflow:visible;margin-right:5px}
`;

// node_modules/@ui5/webcomponents/dist/Button.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Button_1;
var isGlobalHandlerAttached = false;
var activeButton = null;
var Button = Button_1 = class Button2 extends UI5Element_default {
  constructor() {
    super();
    this.design = "Default";
    this.disabled = false;
    this.submits = false;
    this.accessibilityAttributes = {};
    this.type = "Button";
    this.accessibleRole = "Button";
    this.active = false;
    this.iconOnly = false;
    this.hasIcon = false;
    this.hasEndIcon = false;
    this.nonInteractive = false;
    this._iconSettings = {};
    this.forcedTabIndex = "0";
    this._isTouch = false;
    this._cancelAction = false;
    this._deactivate = () => {
      if (activeButton) {
        activeButton._setActiveState(false);
      }
    };
    if (!isGlobalHandlerAttached) {
      document.addEventListener("mouseup", this._deactivate);
      isGlobalHandlerAttached = true;
    }
  }
  _ontouchstart() {
    if (this.nonInteractive) {
      return;
    }
    this._setActiveState(true);
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  async onBeforeRendering() {
    this._setBadgeOverlayStyle();
    this.hasIcon = !!this.icon;
    this.hasEndIcon = !!this.endIcon;
    this.iconOnly = this.isIconOnly;
    this.buttonTitle = this.tooltip || await this.getDefaultTooltip();
  }
  _setBadgeOverlayStyle() {
    const needsOverflowVisible = this.badge.length && (this.badge[0].design === ButtonBadgeDesign_default.AttentionDot || this.badge[0].design === ButtonBadgeDesign_default.OverlayText);
    if (needsOverflowVisible) {
      this._internals.states.add("has-overlay-badge");
    } else {
      this._internals.states.delete("has-overlay-badge");
    }
  }
  _onclick() {
    var _a;
    if (this.nonInteractive) {
      return;
    }
    if (this._isSubmit) {
      submitForm(this);
    }
    if (this._isReset) {
      resetForm(this);
    }
    if (isSafari()) {
      (_a = this.getDomRef()) == null ? void 0 : _a.focus();
    }
  }
  _onmousedown() {
    if (this.nonInteractive) {
      return;
    }
    this._setActiveState(true);
    activeButton = this;
  }
  _ontouchend(e) {
    if (this.disabled) {
      e.preventDefault();
      e.stopPropagation();
    }
    if (this.active) {
      this._setActiveState(false);
    }
    if (activeButton) {
      activeButton._setActiveState(false);
    }
  }
  _onkeydown(e) {
    this._cancelAction = isShift(e) || isEscape(e);
    if (isSpace(e) || isEnter(e)) {
      this._setActiveState(true);
    } else if (this._cancelAction) {
      this._setActiveState(false);
    }
  }
  _onkeyup(e) {
    if (this._cancelAction) {
      e.preventDefault();
    }
    if (isSpace(e) || isEnter(e)) {
      if (this.active) {
        this._setActiveState(false);
      }
    }
  }
  _onfocusout() {
    if (this.nonInteractive) {
      return;
    }
    if (this.active) {
      this._setActiveState(false);
    }
  }
  _setActiveState(active) {
    const eventPrevented = !this.fireDecoratorEvent("active-state-change");
    if (eventPrevented) {
      return;
    }
    this.active = active;
  }
  get _hasPopup() {
    return this.accessibilityAttributes.hasPopup;
  }
  get hasButtonType() {
    return this.design !== ButtonDesign_default.Default && this.design !== ButtonDesign_default.Transparent;
  }
  get isIconOnly() {
    return !willShowContent_default(this.text);
  }
  static typeTextMappings() {
    return {
      "Positive": BUTTON_ARIA_TYPE_ACCEPT,
      "Negative": BUTTON_ARIA_TYPE_REJECT,
      "Emphasized": BUTTON_ARIA_TYPE_EMPHASIZED
    };
  }
  getDefaultTooltip() {
    if (!getEnableDefaultTooltips2()) {
      return;
    }
    return getIconAccessibleName(this.icon);
  }
  get buttonTypeText() {
    return Button_1.i18nBundle.getText(Button_1.typeTextMappings()[this.design]);
  }
  get effectiveAccRole() {
    return toLowercaseEnumValue(this.accessibleRole);
  }
  get tabIndexValue() {
    if (this.disabled) {
      return;
    }
    const tabindex = this.getAttribute("tabindex");
    if (tabindex) {
      return Number.parseInt(tabindex);
    }
    return this.nonInteractive ? -1 : Number.parseInt(this.forcedTabIndex);
  }
  get showIconTooltip() {
    return getEnableDefaultTooltips2() && this.iconOnly && !this.tooltip;
  }
  get ariaLabelText() {
    return getEffectiveAriaLabelText(this);
  }
  get ariaDescribedbyText() {
    return this.hasButtonType ? "ui5-button-hiddenText-type" : void 0;
  }
  get ariaDescriptionText() {
    return this.accessibleDescription === "" ? void 0 : this.accessibleDescription;
  }
  get _isSubmit() {
    return this.type === ButtonType_default.Submit || this.submits;
  }
  get _isReset() {
    return this.type === ButtonType_default.Reset;
  }
  get shouldRenderBadge() {
    return !!this.badge.length && (!!this.badge[0].text.length || this.badge[0].design === ButtonBadgeDesign_default.AttentionDot);
  }
};
__decorate([
  property_default()
], Button.prototype, "design", void 0);
__decorate([
  property_default({ type: Boolean })
], Button.prototype, "disabled", void 0);
__decorate([
  property_default()
], Button.prototype, "icon", void 0);
__decorate([
  property_default()
], Button.prototype, "endIcon", void 0);
__decorate([
  property_default({ type: Boolean })
], Button.prototype, "submits", void 0);
__decorate([
  property_default()
], Button.prototype, "tooltip", void 0);
__decorate([
  property_default()
], Button.prototype, "accessibleName", void 0);
__decorate([
  property_default()
], Button.prototype, "accessibleNameRef", void 0);
__decorate([
  property_default({ type: Object })
], Button.prototype, "accessibilityAttributes", void 0);
__decorate([
  property_default()
], Button.prototype, "accessibleDescription", void 0);
__decorate([
  property_default()
], Button.prototype, "type", void 0);
__decorate([
  property_default()
], Button.prototype, "accessibleRole", void 0);
__decorate([
  property_default({ type: Boolean })
], Button.prototype, "active", void 0);
__decorate([
  property_default({ type: Boolean })
], Button.prototype, "iconOnly", void 0);
__decorate([
  property_default({ type: Boolean })
], Button.prototype, "hasIcon", void 0);
__decorate([
  property_default({ type: Boolean })
], Button.prototype, "hasEndIcon", void 0);
__decorate([
  property_default({ type: Boolean })
], Button.prototype, "nonInteractive", void 0);
__decorate([
  property_default({ noAttribute: true })
], Button.prototype, "buttonTitle", void 0);
__decorate([
  property_default({ type: Object })
], Button.prototype, "_iconSettings", void 0);
__decorate([
  property_default({ noAttribute: true })
], Button.prototype, "forcedTabIndex", void 0);
__decorate([
  property_default({ type: Boolean })
], Button.prototype, "_isTouch", void 0);
__decorate([
  property_default({ type: Boolean, noAttribute: true })
], Button.prototype, "_cancelAction", void 0);
__decorate([
  slot_default({ type: Node, "default": true })
], Button.prototype, "text", void 0);
__decorate([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true })
], Button.prototype, "badge", void 0);
__decorate([
  i18n_default("@ui5/webcomponents")
], Button, "i18nBundle", void 0);
Button = Button_1 = __decorate([
  customElement_default({
    tag: "ui5-button",
    formAssociated: true,
    languageAware: true,
    renderer: JsxRenderer_default,
    template: ButtonTemplate,
    styles: Button_css_default,
    shadowRootOptions: { delegatesFocus: true }
  }),
  event_strict_default("active-state-change", {
    bubbles: true,
    cancelable: true
  })
], Button);
Button.define();
var Button_default = Button;

export {
  toLowercaseEnumValue,
  Button_default
};
//# sourceMappingURL=chunk-4ZNTOWZD.js.map
