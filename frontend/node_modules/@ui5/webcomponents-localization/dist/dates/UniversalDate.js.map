{"version":3,"file":"UniversalDate.js","sourceRoot":"","sources":["../../src/dates/UniversalDate.ts"],"names":[],"mappings":"AACA,aAAa;AACb,OAAO,mBAAmB,MAAM,sCAAsC,CAAC;AA+CvE,MAAM,aAAa,GAAkB,mBAAmB,CAAC;AAEzD,eAAe,aAAa,CAAC","sourcesContent":["import type CalendarType from \"@ui5/webcomponents-base/dist/types/CalendarType.js\";\n// @ts-ignore\nimport UniversalDateNative from \"../sap/ui/core/date/UniversalDate.js\";\nimport type UI5Date from \"./UI5Date.js\";\n\ntype UniversalDate = {\n    new (time: number): UniversalDate;\n    oDate: Date,\n    sCalendarType: string,\n    getInstance: (oDate: UI5Date | Date, sCalendarType?: `${CalendarType}`) => UniversalDate,\n    getDate: () => number,\n    getMonth: () => number,\n    getFullYear: () => number,\n    getYear: () => number,\n    getDay: () => number,\n    getHours: () => number,\n    getMinutes: () => number,\n    getSeconds: () => number,\n    getMilliseconds: () => number,\n    getUTCDate: () => number,\n    getUTCMonth: () => number,\n    getUTCFullYear: () => number,\n    getUTCDay: () => number,\n    getUTCHours: () => number,\n    getUTCMinutes: () => number,\n    getUTCSeconds: () => number,\n    getUTCMilliseconds: () => number,\n    getTime: () => number,\n    valueOf: () => number,\n    getTimezoneOffset: () => number,\n    toString: () => string,\n    toDateString: () => string,\n    setDate: (dayValue: number) => number,\n    setFullYear: (yearValue: number, monthValue?: number, dateValue?: number) => number,\n    setYear: (yearValue: number) => number,\n    setMonth: (monthValue: number, dayValue?: number) => number,\n    setHours: (hoursValue: number, minutesValue?: number, secondsValue?: number, msValue?: number) => number,\n    setMinutes: (minutesValue: number, secondsValue?: number, msValue?: number) => number,\n    setSeconds: (secondsValue: number, msValue?: number) => number,\n    setMilliseconds: (setMilliseconds: number) => number,\n    setUTCDate:(dayValue: number) => number,\n    setUTCFullYear: (yearValue: number, monthValue?: number, dayValue?: number) => number,\n    setUTCMonth: (monthValue: number, dayValue?: number) => number,\n    setUTCHours: (hoursValue: number, minutesValue?: number, secondsValue?: number, msValue?: number) => number,\n    setUTCMinutes: (minutesValue: number, secondsValue?: number, msValue?: number) => number,\n    setUTCSeconds: (secondsValue: number, msValue?: number) => number,\n    setUTCMilliseconds: (setMilliseconds: number) => number,\n}\n\nconst UniversalDate: UniversalDate = UniversalDateNative;\n\nexport default UniversalDate;\n"]}