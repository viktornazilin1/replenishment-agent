{
  "version": 3,
  "sources": ["../../../src/asset-registries/Themes.ts"],
  "sourcesContent": ["import { DEFAULT_THEME } from \"../generated/AssetParameters.js\";\nimport { mergeStyles } from \"../ManagedStyles.js\";\nimport { fireThemeRegistered } from \"../theming/ThemeRegistered.js\";\n\ntype ThemeData = string;\ntype ThemeLoader = (themeName: string) => Promise<string>;\n\nconst themeStyles = new Map<string, string>();\nconst loaders = new Map<string, ThemeLoader>();\nconst customLoaders = new Map<string, ThemeLoader>();\nconst registeredPackages = new Set<string>();\nconst registeredThemes = new Set<string>();\n\nconst registerThemePropertiesLoader = (packageName: string, themeName: string, loader: ThemeLoader) => {\n\tloaders.set(`${packageName}/${themeName}`, loader);\n\tregisteredPackages.add(packageName);\n\tregisteredThemes.add(themeName);\n\tfireThemeRegistered(themeName);\n};\n\nconst registerCustomThemePropertiesLoader = (packageName: string, themeName: string, loader: ThemeLoader) => {\n\tcustomLoaders.set(`${packageName}/${themeName}`, loader);\n};\n\nconst getThemeProperties = async (packageName: string, themeName: string, externalThemeName?: string) => {\n\tconst cacheKey = `${packageName}_${themeName}_${externalThemeName || \"\"}`;\n\tconst cachedStyleData = themeStyles.get(cacheKey);\n\tif (cachedStyleData !== undefined) { // it's valid for style to be an empty string\n\t\treturn cachedStyleData;\n\t}\n\n\tif (!registeredThemes.has(themeName)) {\n\t\tconst regThemesStr = [...registeredThemes.values()].join(\", \");\n\t\tconsole.warn(`You have requested a non-registered theme ${themeName} - falling back to ${DEFAULT_THEME}. Registered themes are: ${regThemesStr}`); /* eslint-disable-line */\n\t\treturn _getThemeProperties(packageName, DEFAULT_THEME);\n\t}\n\n\tconst [style, customStyle] = await Promise.all([\n\t\t_getThemeProperties(packageName, themeName),\n\t\texternalThemeName ? _getThemeProperties(packageName, externalThemeName, true) : undefined,\n\t]);\n\n\tconst styleData = mergeStyles(style, customStyle);\n\tif (styleData) {\n\t\tthemeStyles.set(cacheKey, styleData);\n\t}\n\n\treturn styleData;\n};\n\nconst _getThemeProperties = async (packageName: string, themeName: string, forCustomTheme = false) => {\n\tconst loadersMap = forCustomTheme ? customLoaders : loaders;\n\tconst loader = loadersMap.get(`${packageName}/${themeName}`);\n\tif (!loader) {\n\t\t// no themes for package\n\t\tif (!forCustomTheme) {\n\t\t\tconsole.error(`Theme [${themeName}] not registered for package [${packageName}]`); /* eslint-disable-line */\n\t\t}\n\t\treturn;\n\t}\n\tlet data;\n\ttry {\n\t\tdata = await loader(themeName);\n\t} catch (error: unknown) {\n\t\tconst e = error as Error;\n\t\tconsole.error(packageName, e.message); /* eslint-disable-line */\n\t\treturn;\n\t}\n\n\treturn data;\n};\n\nconst getRegisteredPackages = () => {\n\treturn registeredPackages;\n};\n\nconst isThemeRegistered = (theme: string) => {\n\treturn registeredThemes.has(theme);\n};\n\nexport {\n\tregisterThemePropertiesLoader,\n\tregisterCustomThemePropertiesLoader,\n\tgetThemeProperties,\n\tgetRegisteredPackages,\n\tisThemeRegistered,\n};\n\nexport type {\n\tThemeData,\n\tThemeLoader,\n};\n"],
  "mappings": "aAAA,OAAS,iBAAAA,MAAqB,kCAC9B,OAAS,eAAAC,MAAmB,sBAC5B,OAAS,uBAAAC,MAA2B,gCAKpC,MAAMC,EAAc,IAAI,IAClBC,EAAU,IAAI,IACdC,EAAgB,IAAI,IACpBC,EAAqB,IAAI,IACzBC,EAAmB,IAAI,IAEvBC,EAAgC,CAACC,EAAqBC,EAAmBC,IAAwB,CACtGP,EAAQ,IAAI,GAAGK,CAAW,IAAIC,CAAS,GAAIC,CAAM,EACjDL,EAAmB,IAAIG,CAAW,EAClCF,EAAiB,IAAIG,CAAS,EAC9BR,EAAoBQ,CAAS,CAC9B,EAEME,EAAsC,CAACH,EAAqBC,EAAmBC,IAAwB,CAC5GN,EAAc,IAAI,GAAGI,CAAW,IAAIC,CAAS,GAAIC,CAAM,CACxD,EAEME,EAAqB,MAAOJ,EAAqBC,EAAmBI,IAA+B,CACxG,MAAMC,EAAW,GAAGN,CAAW,IAAIC,CAAS,IAAII,GAAqB,EAAE,GACjEE,EAAkBb,EAAY,IAAIY,CAAQ,EAChD,GAAIC,IAAoB,OACvB,OAAOA,EAGR,GAAI,CAACT,EAAiB,IAAIG,CAAS,EAAG,CACrC,MAAMO,EAAe,CAAC,GAAGV,EAAiB,OAAO,CAAC,EAAE,KAAK,IAAI,EAC7D,eAAQ,KAAK,6CAA6CG,CAAS,sBAAsBV,CAAa,4BAA4BiB,CAAY,EAAE,EACzIC,EAAoBT,EAAaT,CAAa,CACtD,CAEA,KAAM,CAACmB,EAAOC,CAAW,EAAI,MAAM,QAAQ,IAAI,CAC9CF,EAAoBT,EAAaC,CAAS,EAC1CI,EAAoBI,EAAoBT,EAAaK,EAAmB,EAAI,EAAI,MACjF,CAAC,EAEKO,EAAYpB,EAAYkB,EAAOC,CAAW,EAChD,OAAIC,GACHlB,EAAY,IAAIY,EAAUM,CAAS,EAG7BA,CACR,EAEMH,EAAsB,MAAOT,EAAqBC,EAAmBY,EAAiB,KAAU,CAErG,MAAMX,GADaW,EAAiBjB,EAAgBD,GAC1B,IAAI,GAAGK,CAAW,IAAIC,CAAS,EAAE,EAC3D,GAAI,CAACC,EAAQ,CAEPW,GACJ,QAAQ,MAAM,UAAUZ,CAAS,iCAAiCD,CAAW,GAAG,EAEjF,MACD,CACA,IAAIc,EACJ,GAAI,CACHA,EAAO,MAAMZ,EAAOD,CAAS,CAC9B,OAASc,EAAgB,CAExB,QAAQ,MAAMf,EADJe,EACmB,OAAO,EACpC,MACD,CAEA,OAAOD,CACR,EAEME,EAAwB,IACtBnB,EAGFoB,EAAqBC,GACnBpB,EAAiB,IAAIoB,CAAK,EAGlC,OACCnB,KAAA,8BACAI,KAAA,oCACAC,KAAA,mBACAY,KAAA,sBACAC,KAAA",
  "names": ["DEFAULT_THEME", "mergeStyles", "fireThemeRegistered", "themeStyles", "loaders", "customLoaders", "registeredPackages", "registeredThemes", "registerThemePropertiesLoader", "packageName", "themeName", "loader", "registerCustomThemePropertiesLoader", "getThemeProperties", "externalThemeName", "cacheKey", "cachedStyleData", "regThemesStr", "_getThemeProperties", "style", "customStyle", "styleData", "forCustomTheme", "data", "error", "getRegisteredPackages", "isThemeRegistered", "theme"]
}
