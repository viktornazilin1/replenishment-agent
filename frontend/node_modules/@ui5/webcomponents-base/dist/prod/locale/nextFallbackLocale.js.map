{
  "version": 3,
  "sources": ["../../../src/locale/nextFallbackLocale.ts"],
  "sourcesContent": ["import { DEFAULT_LOCALE } from \"../generated/AssetParameters.js\";\n\nconst LOCALE_FALBACK_MAP = {\n\t\"zh_HK\": \"zh_TW\",\n\t\"in\": \"id\",\n};\n\n/**\n * Calculates the next fallback locale for the given locale.\n *\n * @param {string} locale Locale string in Java format (underscores) or null\n * @returns {string} Next fallback Locale or \"en\" if no fallbacks found.\n */\nconst nextFallbackLocale = (locale: string) => {\n\tif (!locale) {\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\tif (LOCALE_FALBACK_MAP[locale as keyof typeof LOCALE_FALBACK_MAP]) {\n\t\treturn LOCALE_FALBACK_MAP[locale as keyof typeof LOCALE_FALBACK_MAP];\n\t}\n\n\t// if there are multiple segments (separated by underscores), remove the last one\n\tconst p = locale.lastIndexOf(\"_\");\n\tif (p >= 0) {\n\t\treturn locale.slice(0, p);\n\t}\n\n\t// for any language but the default, fallback to the default first before falling back to the 'raw' language (empty string)\n\treturn locale !== DEFAULT_LOCALE ? DEFAULT_LOCALE : \"\";\n};\n\nexport default nextFallbackLocale;\n"],
  "mappings": "aAAA,OAAS,kBAAAA,MAAsB,kCAE/B,MAAMC,EAAqB,CAC1B,MAAS,QACT,GAAM,IACP,EAQMC,EAAsBC,GAAmB,CAC9C,GAAI,CAACA,EACJ,OAAOH,EAGR,GAAIC,EAAmBE,CAAyC,EAC/D,OAAOF,EAAmBE,CAAyC,EAIpE,MAAMC,EAAID,EAAO,YAAY,GAAG,EAChC,OAAIC,GAAK,EACDD,EAAO,MAAM,EAAGC,CAAC,EAIlBD,IAAWH,EAAiBA,EAAiB,EACrD,EAEA,eAAeE",
  "names": ["DEFAULT_LOCALE", "LOCALE_FALBACK_MAP", "nextFallbackLocale", "locale", "p"]
}
