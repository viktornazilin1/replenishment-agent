{
  "version": 3,
  "sources": ["../../../src/renderer/JsxRenderer.ts"],
  "sourcesContent": ["import { render, createContext } from \"../thirdparty/preact/preact.module.js\";\nimport { jsx } from \"../thirdparty/preact/jsxRuntime.module.js\";\nimport type UI5Element from \"../UI5Element.js\";\nimport type { Renderer } from \"../UI5Element.js\";\n\nconst instanceToContextMap = new WeakMap<UI5Element, ReturnType<typeof createContext<UI5Element>>>();\n\nconst jsxRenderer: Renderer = (instance: UI5Element, container: HTMLElement | DocumentFragment) => {\n\tlet ctx = instanceToContextMap.get(instance);\n\tif (!ctx) {\n\t\t// create a context holding the element that is being rendered\n\t\t// this contect will be used when adding event listeners - they all will be bound to this element\n\t\tctx = createContext(instance);\n\t\tinstanceToContextMap.set(instance, ctx);\n\t}\n\tconst templateResult = instance.render();\n\trender(jsx(ctx.Provider, { value: instance, children: templateResult }), container);\n};\n\nexport default jsxRenderer;\n"],
  "mappings": "aAAA,OAAS,UAAAA,EAAQ,iBAAAC,MAAqB,wCACtC,OAAS,OAAAC,MAAW,4CAIpB,MAAMC,EAAuB,IAAI,QAE3BC,EAAwB,CAACC,EAAsBC,IAA8C,CAClG,IAAIC,EAAMJ,EAAqB,IAAIE,CAAQ,EACtCE,IAGJA,EAAMN,EAAcI,CAAQ,EAC5BF,EAAqB,IAAIE,EAAUE,CAAG,GAEvC,MAAMC,EAAiBH,EAAS,OAAO,EACvCL,EAAOE,EAAIK,EAAI,SAAU,CAAE,MAAOF,EAAU,SAAUG,CAAe,CAAC,EAAGF,CAAS,CACnF,EAEA,eAAeF",
  "names": ["render", "createContext", "jsx", "instanceToContextMap", "jsxRenderer", "instance", "container", "ctx", "templateResult"]
}
