{
  "version": 3,
  "sources": ["../../../src/animations/slideDown.ts"],
  "sourcesContent": ["import animate, { duration } from \"./animate.js\";\n\nconst slideDown = (element: HTMLElement) => {\n\tlet computedStyles: CSSStyleDeclaration,\n\t\tpaddingTop: number,\n\t\tpaddingBottom: number,\n\t\tmarginTop: number,\n\t\tmarginBottom: number,\n\t\theight: number;\n\tlet storedOverflow: string,\n\t\tstoredPaddingTop: string,\n\t\tstoredPaddingBottom: string,\n\t\tstoredMarginTop: string,\n\t\tstoredMarginBottom: string,\n\t\tstoredHeight: string;\n\n\tconst animation = animate({\n\t\tbeforeStart: () => {\n\t\t\t// Show the element to measure its properties\n\t\t\telement.style.display = \"block\";\n\n\t\t\t// Get Computed styles\n\t\t\tcomputedStyles = getComputedStyle(element);\n\t\t\tpaddingTop = parseFloat(computedStyles.paddingTop);\n\t\t\tpaddingBottom = parseFloat(computedStyles.paddingBottom);\n\t\t\tmarginTop = parseFloat(computedStyles.marginTop);\n\t\t\tmarginBottom = parseFloat(computedStyles.marginBottom);\n\t\t\theight = parseFloat(computedStyles.height);\n\n\t\t\t// Store inline styles\n\t\t\tstoredOverflow = element.style.overflow;\n\t\t\tstoredPaddingTop = element.style.paddingTop;\n\t\t\tstoredPaddingBottom = element.style.paddingBottom;\n\t\t\tstoredMarginTop = element.style.marginTop;\n\t\t\tstoredMarginBottom = element.style.marginBottom;\n\t\t\tstoredHeight = element.style.height;\n\n\t\t\telement.style.overflow = \"hidden\";\n\t\t\telement.style.paddingTop = \"0\";\n\t\t\telement.style.paddingBottom = \"0\";\n\t\t\telement.style.marginTop = \"0\";\n\t\t\telement.style.marginBottom = \"0\";\n\t\t\telement.style.height = \"0\";\n\t\t},\n\t\tduration,\n\t\telement,\n\t\tadvance: progress => {\n\t\t\t// WORKAROUND\n\t\t\telement.style.display = \"block\";\n\t\t\t// END OF WORKAROUND\n\n\t\t\telement.style.paddingTop = `${(paddingTop * progress)}px`;\n\t\t\telement.style.paddingBottom = `${(paddingBottom * progress)}px`;\n\t\t\telement.style.marginTop = `${(marginTop * progress)}px`;\n\t\t\telement.style.marginBottom = `${(marginBottom * progress)}px`;\n\t\t\telement.style.height = `${(height * progress)}px`;\n\t\t},\n\t});\n\n\tanimation.promise().then(() => {\n\t\telement.style.overflow = storedOverflow;\n\t\telement.style.paddingTop = storedPaddingTop;\n\t\telement.style.paddingBottom = storedPaddingBottom;\n\t\telement.style.marginTop = storedMarginTop;\n\t\telement.style.marginBottom = storedMarginBottom;\n\t\telement.style.height = storedHeight;\n\t});\n\n\treturn animation;\n};\n\nexport default slideDown;\n"],
  "mappings": "aAAA,OAAOA,GAAW,YAAAC,MAAgB,eAElC,MAAMC,EAAaC,GAAyB,CAC3C,IAAIC,EACHC,EACAC,EACAC,EACAC,EACAC,EACGC,EACHC,EACAC,EACAC,EACAC,EACAC,EAED,MAAMC,EAAYhB,EAAQ,CACzB,YAAa,IAAM,CAElBG,EAAQ,MAAM,QAAU,QAGxBC,EAAiB,iBAAiBD,CAAO,EACzCE,EAAa,WAAWD,EAAe,UAAU,EACjDE,EAAgB,WAAWF,EAAe,aAAa,EACvDG,EAAY,WAAWH,EAAe,SAAS,EAC/CI,EAAe,WAAWJ,EAAe,YAAY,EACrDK,EAAS,WAAWL,EAAe,MAAM,EAGzCM,EAAiBP,EAAQ,MAAM,SAC/BQ,EAAmBR,EAAQ,MAAM,WACjCS,EAAsBT,EAAQ,MAAM,cACpCU,EAAkBV,EAAQ,MAAM,UAChCW,EAAqBX,EAAQ,MAAM,aACnCY,EAAeZ,EAAQ,MAAM,OAE7BA,EAAQ,MAAM,SAAW,SACzBA,EAAQ,MAAM,WAAa,IAC3BA,EAAQ,MAAM,cAAgB,IAC9BA,EAAQ,MAAM,UAAY,IAC1BA,EAAQ,MAAM,aAAe,IAC7BA,EAAQ,MAAM,OAAS,GACxB,EACA,SAAAF,EACA,QAAAE,EACA,QAASc,GAAY,CAEpBd,EAAQ,MAAM,QAAU,QAGxBA,EAAQ,MAAM,WAAa,GAAIE,EAAaY,CAAS,KACrDd,EAAQ,MAAM,cAAgB,GAAIG,EAAgBW,CAAS,KAC3Dd,EAAQ,MAAM,UAAY,GAAII,EAAYU,CAAS,KACnDd,EAAQ,MAAM,aAAe,GAAIK,EAAeS,CAAS,KACzDd,EAAQ,MAAM,OAAS,GAAIM,EAASQ,CAAS,IAC9C,CACD,CAAC,EAED,OAAAD,EAAU,QAAQ,EAAE,KAAK,IAAM,CAC9Bb,EAAQ,MAAM,SAAWO,EACzBP,EAAQ,MAAM,WAAaQ,EAC3BR,EAAQ,MAAM,cAAgBS,EAC9BT,EAAQ,MAAM,UAAYU,EAC1BV,EAAQ,MAAM,aAAeW,EAC7BX,EAAQ,MAAM,OAASY,CACxB,CAAC,EAEMC,CACR,EAEA,eAAed",
  "names": ["animate", "duration", "slideDown", "element", "computedStyles", "paddingTop", "paddingBottom", "marginTop", "marginBottom", "height", "storedOverflow", "storedPaddingTop", "storedPaddingBottom", "storedMarginTop", "storedMarginBottom", "storedHeight", "animation", "progress"]
}
