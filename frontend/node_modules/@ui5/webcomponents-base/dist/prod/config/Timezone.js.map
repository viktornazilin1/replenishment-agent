{
  "version": 3,
  "sources": ["../../../src/config/Timezone.ts"],
  "sourcesContent": ["import { getTimezone as getConfiguredTimezone } from \"../InitialConfiguration.js\";\nimport { attachConfigurationReset } from \"./ConfigurationReset.js\";\n\nlet currTimezone: string | undefined;\n\nattachConfigurationReset(() => {\n\tcurrTimezone = undefined;\n});\n\n/**\n * Returns the configured IANA timezone ID.\n *\n * @private\n * @returns {string}\n */\nconst getTimezone = (): string | undefined => {\n\tif (currTimezone === undefined) {\n\t\tcurrTimezone = getConfiguredTimezone();\n\t}\n\treturn currTimezone;\n};\n\n/**\n * Sets the IANA timezone ID.\n * **For example:** \"America/New_York\", \"Europe/London\", \"Australia/Sydney\", \"Asia/Bishkek\", etc.\n *>\n * @param {string} timezone\n * @private\n * @returns { Promise<void> }\n */\nconst setTimezone = (timezone: string) => {\n\tif (currTimezone === timezone) {\n\t\treturn;\n\t}\n\n\tcurrTimezone = timezone;\n};\n\nexport {\n\tgetTimezone,\n\tsetTimezone,\n};\n"],
  "mappings": "aAAA,OAAS,eAAeA,MAA6B,6BACrD,OAAS,4BAAAC,MAAgC,0BAEzC,IAAIC,EAEJD,EAAyB,IAAM,CAC9BC,EAAe,MAChB,CAAC,EAQD,MAAMC,EAAc,KACfD,IAAiB,SACpBA,EAAeF,EAAsB,GAE/BE,GAWFE,EAAeC,GAAqB,CACrCH,IAAiBG,IAIrBH,EAAeG,EAChB,EAEA,OACCF,KAAA,YACAC,KAAA",
  "names": ["getConfiguredTimezone", "attachConfigurationReset", "currTimezone", "getTimezone", "setTimezone", "timezone"]
}
