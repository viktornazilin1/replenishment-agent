{
  "version": 3,
  "sources": ["../../../src/config/CalendarType.ts"],
  "sourcesContent": ["import CalendarType from \"../types/CalendarType.js\";\nimport {\n\tgetCalendarType as getConfiguredCalendarType,\n\tgetSecondaryCalendarType as getConfiguredSecondaryCalendarType,\n} from \"../InitialConfiguration.js\";\nimport { attachConfigurationReset } from \"./ConfigurationReset.js\";\n\nlet calendarType: CalendarType | undefined;\nlet secondaryCalendarType: CalendarType | undefined;\n\nattachConfigurationReset(() => {\n\tcalendarType = undefined;\n\tsecondaryCalendarType = undefined;\n});\n\n/**\n * Returns the configured or default calendar type.\n * @public\n * @returns { CalendarType } the effective calendar type\n */\nconst getCalendarType = (): CalendarType => {\n\tif (calendarType === undefined) {\n\t\tcalendarType = getConfiguredCalendarType();\n\t}\n\n\tif (calendarType && calendarType in CalendarType) {\n\t\treturn calendarType;\n\t}\n\n\treturn CalendarType.Gregorian;\n};\n\n/**\n * Returns the configured secondary calendar type.\n * @public\n * @returns { CalendarType | undefined } the effective calendar type\n * @since 1.18.0\n */\nconst getSecondaryCalendarType = (): CalendarType | undefined => {\n\tif (secondaryCalendarType === undefined) {\n\t\tsecondaryCalendarType = getConfiguredSecondaryCalendarType();\n\t}\n\n\tif (secondaryCalendarType && secondaryCalendarType in CalendarType) {\n\t\treturn secondaryCalendarType;\n\t}\n\n\treturn secondaryCalendarType;\n};\n\nexport {\n\tgetCalendarType,\n\tgetSecondaryCalendarType,\n};\n"],
  "mappings": "aAAA,OAAOA,MAAkB,2BACzB,OACC,mBAAmBC,EACnB,4BAA4BC,MACtB,6BACP,OAAS,4BAAAC,MAAgC,0BAEzC,IAAIC,EACAC,EAEJF,EAAyB,IAAM,CAC9BC,EAAe,OACfC,EAAwB,MACzB,CAAC,EAOD,MAAMC,EAAkB,KACnBF,IAAiB,SACpBA,EAAeH,EAA0B,GAGtCG,GAAgBA,KAAgBJ,EAC5BI,EAGDJ,EAAa,WASfO,EAA2B,KAC5BF,IAA0B,SAC7BA,EAAwBH,EAAmC,GAGxDG,GAAyBA,KAAyBL,EAC9CK,GAMT,OACCC,KAAA,gBACAC,KAAA",
  "names": ["CalendarType", "getConfiguredCalendarType", "getConfiguredSecondaryCalendarType", "attachConfigurationReset", "calendarType", "secondaryCalendarType", "getCalendarType", "getSecondaryCalendarType"]
}
