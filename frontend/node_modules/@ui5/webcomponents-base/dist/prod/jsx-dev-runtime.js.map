{
  "version": 3,
  "sources": ["../../src/jsx-dev-runtime.ts"],
  "sourcesContent": ["// eslint-disable-next-line import/extensions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"./thirdparty/preact/jsxRuntime.module.js\";\nimport { options } from \"./thirdparty/preact/preact.module.js\";\nimport { type VNode } from \"./jsx-runtime.js\";\nimport type UI5Element from \"./UI5Element.js\";\nimport { isUI5ElementClass, preprocess } from \"./jsx-utils.js\";\nimport { kebabToCamelCase } from \"./util/StringHelper.js\";\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst old = options.vnode;\n\noptions.vnode = vnode => {\n\tconst props: Record<string, any> = vnode.props;\n\tif (props !== null && typeof props === \"object\") {\n\t\tif (props.class && typeof props.class === \"object\") {\n\t\t\t// props.class = classObjToStr(props.class as Record<string, boolean>);\n\t\t}\n\t}\n\told && old(vnode);\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isBoundOrArrow(func: Function): boolean {\n\t// TODO improve => detection after func params\n\treturn func.name.startsWith(\"bound \") || func.toString().includes(\"=>\");\n}\n\nfunction checkAttributeUsage(type: string | typeof UI5Element, props: Record<string, any>) {\n\tif (!isUI5ElementClass(type)) {\n\t\treturn;\n\t}\n\n\tconst tag = type.getMetadata().getTag();\n\tconst componentAttributes = type.getMetadata().getAttributesList();\n\tObject.keys(props).forEach(prop => {\n\t\tif (prop.includes(\"-\") && componentAttributes.includes(prop)) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn(`Avoid attribute usage in favour of properties ['${prop}' --> '${kebabToCamelCase(prop)}'] for tag [${tag}]. Check stack trace to find out which template causes this. Attributes are not type-checked and boolean conversion is manual and error-prone.`);\n\t\t}\n\t});\n}\n\nexport function Fragment(props: Record<string, any>, context?: any) {\n\treturn _Fragment(props, context);\n}\n\nexport function jsxDEV(type: string | typeof UI5Element, props: Record<string, any>, key: string): VNode<any> {\n\tconst tag = preprocess(type, props, key);\n\n\tcheckAttributeUsage(type, props);\n\n\treturn _jsxDEV(tag, props, key) as VNode<any>;\n}\n"],
  "mappings": "aACA,OAAS,UAAUA,EAAS,YAAYC,MAAiB,2CACzD,OAAS,WAAAC,MAAe,uCAGxB,OAAS,qBAAAC,EAAmB,cAAAC,MAAkB,iBAC9C,OAAS,oBAAAC,MAAwB,yBAGjC,MAAMC,EAAMJ,EAAQ,MAEpBA,EAAQ,MAAQK,GAAS,CACxB,MAAMC,EAA6BD,EAAM,MACrCC,IAAU,MAAQ,OAAOA,GAAU,UAClCA,EAAM,OAAgBA,EAAM,MAIjCF,GAAOA,EAAIC,CAAK,CACjB,EAGA,SAASE,EAAeC,EAAyB,CAEhD,OAAOA,EAAK,KAAK,WAAW,QAAQ,GAAKA,EAAK,SAAS,EAAE,SAAS,IAAI,CACvE,CAEA,SAASC,EAAoBC,EAAkCJ,EAA4B,CAC1F,GAAI,CAACL,EAAkBS,CAAI,EAC1B,OAGD,MAAMC,EAAMD,EAAK,YAAY,EAAE,OAAO,EAChCE,EAAsBF,EAAK,YAAY,EAAE,kBAAkB,EACjE,OAAO,KAAKJ,CAAK,EAAE,QAAQO,GAAQ,CAC9BA,EAAK,SAAS,GAAG,GAAKD,EAAoB,SAASC,CAAI,GAE1D,QAAQ,KAAK,mDAAmDA,CAAI,UAAUV,EAAiBU,CAAI,CAAC,eAAeF,CAAG,gJAAgJ,CAExQ,CAAC,CACF,CAEO,gBAAS,SAASL,EAA4BQ,EAAe,CACnE,OAAOf,EAAUO,EAAOQ,CAAO,CAChC,CAEO,gBAAS,OAAOJ,EAAkCJ,EAA4BS,EAAyB,CAC7G,MAAMJ,EAAMT,EAAWQ,EAAMJ,EAAOS,CAAG,EAEvC,OAAAN,EAAoBC,EAAMJ,CAAK,EAExBR,EAAQa,EAAKL,EAAOS,CAAG,CAC/B",
  "names": ["_jsxDEV", "_Fragment", "options", "isUI5ElementClass", "preprocess", "kebabToCamelCase", "old", "vnode", "props", "isBoundOrArrow", "func", "checkAttributeUsage", "type", "tag", "componentAttributes", "prop", "context", "key"]
}
