{
  "version": 3,
  "sources": ["../../../../src/thirdparty/preact/jsxRuntime.module.d.ts"],
  "sourcesContent": ["// Intentionally not using a relative path to take advantage of\n// the TS version resolution mechanism\nexport { Fragment } from './preact.module.js';\nimport {\n\tComponentType,\n\tComponentChild,\n\tComponentChildren,\n\tVNode,\n\tAttributes\n} from './preact.module.js';\nimport { JSXInternal } from './jsx.js';\n\nexport function jsx(\n\ttype: string,\n\tprops: JSXInternal.HTMLAttributes &\n\t\tJSXInternal.SVGAttributes &\n\t\tRecord<string, any> & { children?: ComponentChild },\n\tkey?: string\n): VNode<any>;\nexport function jsx<P>(\n\ttype: ComponentType<P>,\n\tprops: Attributes & P & { children?: ComponentChild },\n\tkey?: string\n): VNode<any>;\n\nexport function jsxs(\n\ttype: string,\n\tprops: JSXInternal.HTMLAttributes &\n\t\tJSXInternal.SVGAttributes &\n\t\tRecord<string, any> & { children?: ComponentChild[] },\n\tkey?: string\n): VNode<any>;\nexport function jsxs<P>(\n\ttype: ComponentType<P>,\n\tprops: Attributes & P & { children?: ComponentChild[] },\n\tkey?: string\n): VNode<any>;\n\nexport function jsxDEV(\n\ttype: string,\n\tprops: JSXInternal.HTMLAttributes &\n\t\tJSXInternal.SVGAttributes &\n\t\tRecord<string, any> & { children?: ComponentChildren },\n\tkey?: string\n): VNode<any>;\nexport function jsxDEV<P>(\n\ttype: ComponentType<P>,\n\tprops: Attributes & P & { children?: ComponentChildren },\n\tkey?: string\n): VNode<any>;\n\n// These are not expected to be used manually, but by a JSX transform\nexport function jsxTemplate(\n\ttemplate: string[],\n\t...expressions: any[]\n): VNode<any>;\nexport function jsxAttr(name: string, value: any): string | null;\nexport function jsxEscape<T>(\n\tvalue: T\n): string | null | VNode<any> | Array<string | null | VNode>;\n\nexport { JSXInternal as JSX };\n"],
  "mappings": "aAEA,OAAS,aAAgB,qBAQzB,OAAS,eAAAA,MAAmB,WAmD5B,OAASA,KAAe",
  "names": ["JSXInternal"]
}
