{
  "version": 3,
  "sources": ["../../src/CustomElementsRegistry.ts"],
  "sourcesContent": ["import getSharedResource from \"./getSharedResource.js\";\nimport { getCurrentRuntimeIndex, compareRuntimes, getAllRuntimes } from \"./Runtimes.js\";\nimport type { Timeout } from \"./types.js\";\n\nconst Tags = getSharedResource<Map<string, number>>(\"Tags\", new Map());\nconst Definitions = new Set<string>();\n\nlet Failures = new Map<number, Set<string>>();\nlet failureTimeout: Timeout | undefined;\n\nconst UNKNOWN_RUNTIME = -1;\n\nconst registerTag = (tag: string) => {\n\tDefinitions.add(tag);\n\tTags.set(tag, getCurrentRuntimeIndex());\n};\n\nconst isTagRegistered = (tag: string) => {\n\treturn Definitions.has(tag);\n};\n\nconst hasRegisteredTags = () => {\n\treturn Definitions.size > 0;\n};\n\nconst getAllRegisteredTags = () => {\n\treturn [...Definitions.values()];\n};\n\nconst recordTagRegistrationFailure = (tag: string) => {\n\tlet tagRegRuntimeIndex = Tags.get(tag);\n\tif (tagRegRuntimeIndex === undefined) {\n\t\ttagRegRuntimeIndex = UNKNOWN_RUNTIME; // If the tag is taken, but not registered in Tags, then a version before 1.1.0 defined it => use the \"unknown\" key\n\t}\n\n\tif (!Failures.has(tagRegRuntimeIndex)) {\n\t\tFailures.set(tagRegRuntimeIndex, new Set());\n\t}\n\tFailures.get(tagRegRuntimeIndex)!.add(tag);\n\n\tif (!failureTimeout) {\n\t\tfailureTimeout = setTimeout(() => {\n\t\t\tdisplayFailedRegistrations();\n\t\t\tFailures = new Map();\n\t\t\tfailureTimeout = undefined;\n\t\t}, 1000);\n\t}\n};\n\nconst displayFailedRegistrations = () => {\n\tconst allRuntimes = getAllRuntimes();\n\tconst currentRuntimeIndex = getCurrentRuntimeIndex();\n\tconst currentRuntime = allRuntimes[currentRuntimeIndex];\n\n\tlet message = `Multiple UI5 Web Components instances detected.`;\n\n\tif (allRuntimes.length > 1) {\n\t\tmessage = `${message}\\nLoading order (versions before 1.1.0 not listed): ${allRuntimes.map(runtime => `\\n${runtime.description}`).join(\"\")}`;\n\t}\n\n\t[...Failures.keys()].forEach(otherRuntimeIndex => {\n\t\tlet comparison: number;\n\t\tlet otherRuntime;\n\n\t\tif (otherRuntimeIndex === UNKNOWN_RUNTIME) { // version < 1.1.0 defined the tag\n\t\t\tcomparison = 1; // the current runtime is considered newer\n\t\t\totherRuntime = {\n\t\t\t\tdescription: `Older unknown runtime`,\n\t\t\t};\n\t\t} else {\n\t\t\tcomparison = compareRuntimes(currentRuntimeIndex, otherRuntimeIndex);\n\t\t\totherRuntime = allRuntimes[otherRuntimeIndex];\n\t\t}\n\n\t\tlet compareWord;\n\t\tif (comparison > 0) {\n\t\t\tcompareWord = \"an older\";\n\t\t} else if (comparison < 0) {\n\t\t\tcompareWord = \"a newer\";\n\t\t} else {\n\t\t\tcompareWord = \"the same\";\n\t\t}\n\t\tmessage = `${message}\\n\\n\"${currentRuntime.description}\" failed to define ${Failures.get(otherRuntimeIndex)!.size} tag(s) as they were defined by a runtime of ${compareWord} version \"${otherRuntime.description}\": ${([...Failures.get(otherRuntimeIndex)!]).sort().join(\", \")}.`;\n\n\t\tif (comparison > 0) {\n\t\t\tmessage = `${message}\\nWARNING! If your code uses features of the above web components, unavailable in ${otherRuntime.description}, it might not work as expected!`;\n\t\t} else {\n\t\t\tmessage = `${message}\\nSince the above web components were defined by the same or newer version runtime, they should be compatible with your code.`;\n\t\t}\n\t});\n\n\tmessage = `${message}\\n\\nTo prevent other runtimes from defining tags that you use, consider using scoping or have third-party libraries use scoping: https://github.com/SAP/ui5-webcomponents/blob/main/docs/2-advanced/06-scoping.md.`;\n\n\tconsole.warn(message); // eslint-disable-line\n};\n\nexport {\n\tregisterTag,\n\tisTagRegistered,\n\thasRegisteredTags,\n\tgetAllRegisteredTags,\n\trecordTagRegistrationFailure,\n};\n"],
  "mappings": "aAAA,OAAOA,MAAuB,yBAC9B,OAAS,0BAAAC,EAAwB,mBAAAC,EAAiB,kBAAAC,MAAsB,gBAGxE,MAAMC,EAAOJ,EAAuC,OAAQ,IAAI,GAAK,EAC/DK,EAAc,IAAI,IAExB,IAAIC,EAAW,IAAI,IACfC,EAEJ,MAAMC,EAAkB,GAElBC,EAAeC,GAAgB,CACpCL,EAAY,IAAIK,CAAG,EACnBN,EAAK,IAAIM,EAAKT,EAAuB,CAAC,CACvC,EAEMU,EAAmBD,GACjBL,EAAY,IAAIK,CAAG,EAGrBE,EAAoB,IAClBP,EAAY,KAAO,EAGrBQ,EAAuB,IACrB,CAAC,GAAGR,EAAY,OAAO,CAAC,EAG1BS,EAAgCJ,GAAgB,CACrD,IAAIK,EAAqBX,EAAK,IAAIM,CAAG,EACjCK,IAAuB,SAC1BA,EAAqBP,GAGjBF,EAAS,IAAIS,CAAkB,GACnCT,EAAS,IAAIS,EAAoB,IAAI,GAAK,EAE3CT,EAAS,IAAIS,CAAkB,EAAG,IAAIL,CAAG,EAEpCH,IACJA,EAAiB,WAAW,IAAM,CACjCS,EAA2B,EAC3BV,EAAW,IAAI,IACfC,EAAiB,MAClB,EAAG,GAAI,EAET,EAEMS,EAA6B,IAAM,CACxC,MAAMC,EAAcd,EAAe,EAC7Be,EAAsBjB,EAAuB,EAC7CkB,EAAiBF,EAAYC,CAAmB,EAEtD,IAAIE,EAAU,kDAEVH,EAAY,OAAS,IACxBG,EAAU,GAAGA,CAAO;AAAA,oDAAuDH,EAAY,IAAII,GAAW;AAAA,EAAKA,EAAQ,WAAW,EAAE,EAAE,KAAK,EAAE,CAAC,IAG3I,CAAC,GAAGf,EAAS,KAAK,CAAC,EAAE,QAAQgB,GAAqB,CACjD,IAAIC,EACAC,EAEAF,IAAsBd,GACzBe,EAAa,EACbC,EAAe,CACd,YAAa,uBACd,IAEAD,EAAarB,EAAgBgB,EAAqBI,CAAiB,EACnEE,EAAeP,EAAYK,CAAiB,GAG7C,IAAIG,EACAF,EAAa,EAChBE,EAAc,WACJF,EAAa,EACvBE,EAAc,UAEdA,EAAc,WAEfL,EAAU,GAAGA,CAAO;AAAA;AAAA,GAAQD,EAAe,WAAW,sBAAsBb,EAAS,IAAIgB,CAAiB,EAAG,IAAI,gDAAgDG,CAAW,aAAaD,EAAa,WAAW,MAAO,CAAC,GAAGlB,EAAS,IAAIgB,CAAiB,CAAE,EAAG,KAAK,EAAE,KAAK,IAAI,CAAC,IAE5QC,EAAa,EAChBH,EAAU,GAAGA,CAAO;AAAA,kFAAqFI,EAAa,WAAW,mCAEjIJ,EAAU,GAAGA,CAAO;AAAA,4HAEtB,CAAC,EAEDA,EAAU,GAAGA,CAAO;AAAA;AAAA,gNAEpB,QAAQ,KAAKA,CAAO,CACrB,EAEA,OACCX,KAAA,YACAE,KAAA,gBACAC,KAAA,kBACAC,KAAA,qBACAC,KAAA",
  "names": ["getSharedResource", "getCurrentRuntimeIndex", "compareRuntimes", "getAllRuntimes", "Tags", "Definitions", "Failures", "failureTimeout", "UNKNOWN_RUNTIME", "registerTag", "tag", "isTagRegistered", "hasRegisteredTags", "getAllRegisteredTags", "recordTagRegistrationFailure", "tagRegRuntimeIndex", "displayFailedRegistrations", "allRuntimes", "currentRuntimeIndex", "currentRuntime", "message", "runtime", "otherRuntimeIndex", "comparison", "otherRuntime", "compareWord"]
}
