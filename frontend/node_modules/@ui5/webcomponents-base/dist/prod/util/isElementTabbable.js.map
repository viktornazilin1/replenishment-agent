{
  "version": 3,
  "sources": ["../../../src/util/isElementTabbable.ts"],
  "sourcesContent": ["import isElementHidden from \"./isElementHidden.js\";\n\n/**\n * Returns if the HTMLElement is tabbable.\n *\n * @public\n * @param { HTMLElement } el the component to operate on (component that slots or contains within its shadow root the items the user navigates among)\n * @returns { boolean } true if the element is tabbable or false - if not\n */\nconst isElementTabbable = (el: HTMLElement): boolean => {\n\tif (!el) {\n\t\treturn false;\n\t}\n\n\tif (el.hasAttribute(\"data-sap-no-tab-ref\")) {\n\t\treturn false;\n\t}\n\n\tif (isElementHidden(el)) {\n\t\treturn false;\n\t}\n\n\tconst tabIndex = el.getAttribute(\"tabindex\");\n\tif (tabIndex !== null && tabIndex !== undefined) {\n\t\treturn parseInt(tabIndex) >= 0;\n\t}\n\n\tconst nodeName = el.nodeName.toLowerCase();\n\tif (nodeName === \"a\" || /^(input|select|textarea|button|object)$/.test(nodeName)) {\n\t\treturn !(el as HTMLLinkElement).disabled;\n\t}\n\n\treturn false;\n};\n\nexport default isElementTabbable;\n"],
  "mappings": "aAAA,OAAOA,MAAqB,uBAS5B,MAAMC,EAAqBC,GAA6B,CASvD,GARI,CAACA,GAIDA,EAAG,aAAa,qBAAqB,GAIrCF,EAAgBE,CAAE,EACrB,MAAO,GAGR,MAAMC,EAAWD,EAAG,aAAa,UAAU,EAC3C,GAAIC,GAAa,KAChB,OAAO,SAASA,CAAQ,GAAK,EAG9B,MAAMC,EAAWF,EAAG,SAAS,YAAY,EACzC,OAAIE,IAAa,KAAO,0CAA0C,KAAKA,CAAQ,EACvE,CAAEF,EAAuB,SAG1B,EACR,EAEA,eAAeD",
  "names": ["isElementHidden", "isElementTabbable", "el", "tabIndex", "nodeName"]
}
