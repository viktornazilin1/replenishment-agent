{"version":3,"file":"UI5Element.js","sourceRoot":"","sources":["../src/UI5Element.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport \"@ui5/webcomponents-base/dist/ssr-dom.js\";\nimport type { JSX } from \"./jsx-runtime.js\";\nimport merge from \"./thirdparty/merge.js\";\nimport { boot } from \"./Boot.js\";\nimport UI5ElementMetadata from \"./UI5ElementMetadata.js\";\nimport type {\n\tSlot,\n\tSlotValue,\n\tState,\n\tPropertyValue,\n\tMetadata,\n} from \"./UI5ElementMetadata.js\";\nimport EventProvider from \"./EventProvider.js\";\nimport updateShadowRoot from \"./updateShadowRoot.js\";\nimport { shouldIgnoreCustomElement } from \"./IgnoreCustomElements.js\";\nimport {\n\trenderDeferred,\n\trenderImmediately,\n\tcancelRender,\n} from \"./Render.js\";\nimport { registerTag, isTagRegistered, recordTagRegistrationFailure } from \"./CustomElementsRegistry.js\";\nimport { observeDOMNode, unobserveDOMNode } from \"./DOMObserver.js\";\nimport { skipOriginalEvent } from \"./config/NoConflict.js\";\nimport getEffectiveDir from \"./locale/getEffectiveDir.js\";\nimport { kebabToCamelCase, camelToKebabCase, kebabToPascalCase } from \"./util/StringHelper.js\";\nimport isValidPropertyName from \"./util/isValidPropertyName.js\";\nimport { getSlotName, getSlottedNodesList } from \"./util/SlotsHelper.js\";\nimport arraysAreEqual from \"./util/arraysAreEqual.js\";\nimport { markAsRtlAware } from \"./locale/RTLAwareRegistry.js\";\nimport executeTemplate from \"./renderer/executeTemplate.js\";\nimport { shouldScopeCustomElement } from \"./CustomElementsScopeUtils.js\";\nimport type { TemplateFunction } from \"./renderer/executeTemplate.js\";\nimport type {\n\tAccessibilityInfo,\n\tPromiseResolve,\n\tComponentStylesData,\n\tClassMap,\n} from \"./types.js\";\nimport { updateFormValue, setFormValue } from \"./features/InputElementsFormSupport.js\";\nimport type { IFormInputElement } from \"./features/InputElementsFormSupport.js\";\nimport { getI18nBundle } from \"./i18nBundle.js\";\nimport type I18nBundle from \"./i18nBundle.js\";\nimport { fetchCldr } from \"./asset-registries/LocaleData.js\";\nimport getLocale from \"./locale/getLocale.js\";\n\nconst DEV_MODE = true;\nlet autoId = 0;\n\nconst elementTimeouts = new Map<string, Promise<void>>();\nconst uniqueDependenciesCache = new Map<typeof UI5Element, Array<typeof UI5Element>>();\n\ntype Renderer = (instance: UI5Element, container: HTMLElement | DocumentFragment) => void;\n\ntype ChangeInfo = {\n\ttype: \"property\" | \"slot\",\n\tname: string,\n\treason?: string,\n\tchild?: SlotValue,\n\ttarget?: UI5Element,\n\tnewValue?: PropertyValue,\n\toldValue?: PropertyValue,\n}\n\ntype InvalidationInfo = ChangeInfo & { target: UI5Element };\n\ntype ChildChangeListener = (param: InvalidationInfo) => void;\n\ntype SlotChangeListener = (this: HTMLSlotElement, ev: Event) => void;\n\ntype SlottedChild = Record<string, any>;\n\nconst defaultConverter = {\n\tfromAttribute(value: string | null, type: unknown) {\n\t\tif (type === Boolean) {\n\t\t\treturn value !== null;\n\t\t}\n\t\tif (type === Number) {\n\t\t\treturn value === null ? undefined : parseFloat(value);\n\t\t}\n\t\treturn value;\n\t},\n\ttoAttribute(value: unknown, type: unknown) {\n\t\tif (type === Boolean) {\n\t\t\treturn value as boolean ? \"\" : null;\n\t\t}\n\n\t\t// don't set attributes for arrays and objects\n\t\tif (type === Object || type === Array) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// object, array, other\n\t\tif (value === null || value === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn String(value);\n\t},\n};\n\n/**\n * Triggers re-rendering of a UI5Element instance due to state change.\n * @param {ChangeInfo} changeInfo An object with information about the change that caused invalidation.\n * @private\n */\nfunction _invalidate(this: UI5Element, changeInfo: ChangeInfo) {\n\t// Invalidation should be suppressed: 1) before the component is rendered for the first time 2) and during the execution of onBeforeRendering\n\t// This is necessary not only as an optimization, but also to avoid infinite loops on invalidation between children and parents (when invalidateOnChildChange is used)\n\tif (this._suppressInvalidation) {\n\t\treturn;\n\t}\n\n\t// Call the onInvalidation hook\n\tthis.onInvalidation(changeInfo);\n\n\tthis._changedState.push(changeInfo);\n\trenderDeferred(this);\n\tthis._invalidationEventProvider.fireEvent(\"invalidate\", { ...changeInfo, target: this });\n}\n\n/**\n * looks up a property descsriptor including in the prototype chain\n * @param proto the starting prototype\n * @param name the property to look for\n * @returns the property descriptor if found directly or in the prototype chaing, undefined if not found\n */\nfunction getPropertyDescriptor(proto: any, name: PropertyKey): PropertyDescriptor | undefined {\n\tdo {\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(proto, name);\n\t\tif (descriptor) {\n\t\t\treturn descriptor;\n\t\t}\n\t\t// go up the prototype chain\n\t\tproto = Object.getPrototypeOf(proto);\n\t} while (proto && proto !== HTMLElement.prototype);\n}\n\ntype NotEqual<X, Y> = true extends Equal<X, Y> ? false : true\ntype Equal<X, Y> =\n  (<T>() => T extends X ? 1 : 2) extends\n  (<T>() => T extends Y ? 1 : 2) ? true : false\n\n// JSX support\ntype IsAny<T, Y, N> = 0 extends (1 & T) ? Y : N\n// type Convert<T> = { [Property in keyof T as `on${KebabToPascal<string & Property>}` ]: T[Property] extends IsAny<T> ? any : (e: CustomEvent<T[Property]>) => void }\ntype KebabToCamel<T extends string> = T extends `${infer H}-${infer J}${infer K}`\n? `${Uncapitalize<H>}${Capitalize<J>}${KebabToCamel<K>}`\n: T;\ntype KebabToPascal<T extends string> = Capitalize<KebabToCamel<T>>;\n\ntype GlobalHTMLAttributeNames = \"accesskey\" | \"autocapitalize\" | \"autofocus\" | \"autocomplete\" | \"contenteditable\" | \"contextmenu\" | \"class\" | \"dir\" | \"draggable\" | \"enterkeyhint\" | \"hidden\" | \"id\" | \"inputmode\" | \"lang\" | \"nonce\" | \"part\" | \"exportparts\" | \"pattern\" | \"slot\" | \"spellcheck\" | \"style\" | \"tabIndex\" | \"tabindex\" | \"title\" | \"translate\" | \"ref\" | \"inert\";\ntype ElementProps<I> = Partial<Omit<I, keyof HTMLElement>>;\ntype TargetedCustomEvent<D, T> = Omit<CustomEvent<D>, \"currentTarget\"> & { currentTarget: T };\n// define as method and extract the function signature from the method to make it bivariant so that inheritance of event handlers is not checked via strictFunctionTypes\n// https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-6.html#strict-function-types\ntype TargetedEventHandler<D, T> = {\n\tasMethod(e: TargetedCustomEvent<D, T>): void\n}[\"asMethod\"];\ntype Convert<T, K extends UI5Element> = { [Property in keyof T as `on${KebabToPascal<string & Property>}` ]: IsAny<T[Property], any, TargetedEventHandler<T[Property], K>> }\n\n/**\n * @class\n * Base class for all UI5 Web Components\n *\n * @extends HTMLElement\n * @public\n */\nabstract class UI5Element extends HTMLElement {\n\teventDetails!: NotEqual<this, UI5Element> extends true ? object : {\n\t\t[k: string]: any\n\t};\n\t_jsxEvents!: Omit<JSX.DOMAttributes<this>, keyof Convert<this[\"eventDetails\"], this> | \"onClose\" | \"onToggle\" | \"onChange\" | \"onSelect\" | \"onInput\"> & Convert<this[\"eventDetails\"], this>\n\t_jsxProps!: Pick<JSX.AllHTMLAttributes<HTMLElement>, GlobalHTMLAttributeNames> & ElementProps<this> & Partial<this[\"_jsxEvents\"]> & { key?: any };\n\t__id?: string;\n\t_suppressInvalidation: boolean;\n\t_changedState: Array<ChangeInfo>;\n\t_invalidationEventProvider: EventProvider<InvalidationInfo, void>;\n\t_componentStateFinalizedEventProvider: EventProvider<void, void>;\n\t_inDOM: boolean;\n\t_fullyConnected: boolean;\n\t_childChangeListeners: Map<string, ChildChangeListener>;\n\t_slotsAssignedNodes: WeakMap<HTMLSlotElement, Array<SlotValue>>;\n\t_slotChangeListeners: Map<string, SlotChangeListener>;\n\t_domRefReadyPromise: Promise<void> & { _deferredResolve?: PromiseResolve };\n\t_doNotSyncAttributes: Set<string>;\n\t_state: State;\n\t_internals: ElementInternals;\n\t_individualSlot?: string;\n\t_getRealDomRef?: () => HTMLElement;\n\n\tstatic template?: TemplateFunction;\n\tstatic _metadata: UI5ElementMetadata;\n\n\tstatic renderer: Renderer;\n\tinitializedProperties: Map<string, unknown>;\n\n\t// used to differentiate whether a setter is called from the constructor (from an initializer) or later\n\t// setters from the constructor should not set attributes, this is delegated after the first rendering but is async\n\t// setters after the constructor can set attributes synchronously for more convinient development\n\t_rendered = false;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\t\tthis._changedState = []; // Filled on each invalidation, cleared on re-render (used for debugging)\n\t\tthis._suppressInvalidation = true; // A flag telling whether all invalidations should be ignored. Initialized with \"true\" because a UI5Element can not be invalidated until it is rendered for the first time\n\t\tthis._inDOM = false; // A flag telling whether the UI5Element is currently in the DOM tree of the document or not\n\t\tthis._fullyConnected = false; // A flag telling whether the UI5Element's onEnterDOM hook was called (since it's possible to have the element removed from DOM before that)\n\t\tthis._childChangeListeners = new Map(); // used to store lazy listeners per slot for the child change event of every child inside that slot\n\t\tthis._slotChangeListeners = new Map(); // used to store lazy listeners per slot for the slotchange event of all slot children inside that slot\n\t\tthis._invalidationEventProvider = new EventProvider(); // used by parent components for listening to changes to child components\n\t\tthis._componentStateFinalizedEventProvider = new EventProvider(); // used by friend classes for synchronization\n\t\tlet deferredResolve;\n\t\tthis._domRefReadyPromise = new Promise(resolve => {\n\t\t\tdeferredResolve = resolve;\n\t\t});\n\t\tthis._domRefReadyPromise._deferredResolve = deferredResolve;\n\t\tthis._doNotSyncAttributes = new Set(); // attributes that are excluded from attributeChangedCallback synchronization\n\t\tthis._slotsAssignedNodes = new WeakMap(); // map of all nodes, slotted (directly or transitively) per component slot\n\n\t\tthis._state = { ...ctor.getMetadata().getInitialState() };\n\n\t\t// save properties set before element is upgraded, as they will be overriden by the field initializers in the constructor\n\t\tthis.initializedProperties = new Map();\n\t\tconst allProps = (this.constructor as typeof UI5Element).getMetadata().getPropertiesList();\n\t\tallProps.forEach(propertyName => {\n\t\t\tif (this.hasOwnProperty(propertyName)) { // eslint-disable-line\n\t\t\t\tconst value = (this as Record<string, unknown>)[propertyName];\n\t\t\t\tthis.initializedProperties.set(propertyName, value);\n\t\t\t}\n\t\t});\n\t\tthis._internals = this.attachInternals();\n\n\t\tthis._initShadowRoot();\n\t}\n\n\t_initShadowRoot() {\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\t\tif (ctor._needsShadowDOM()) {\n\t\t\tconst defaultOptions = { mode: \"open\" } as ShadowRootInit;\n\t\t\tthis.attachShadow({ ...defaultOptions, ...ctor.getMetadata().getShadowRootOptions() });\n\n\t\t\tconst slotsAreManaged = ctor.getMetadata().slotsAreManaged();\n\t\t\tif (slotsAreManaged) {\n\t\t\t\tthis.shadowRoot!.addEventListener(\"slotchange\", this._onShadowRootSlotChange.bind(this));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Note: this \"slotchange\" listener is for slots, rendered in the component's shadow root\n\t */\n\t_onShadowRootSlotChange(e: Event) {\n\t\tconst targetShadowRoot = (e.target as Node)?.getRootNode(); // the \"slotchange\" event target is always a slot element\n\t\tif (targetShadowRoot === this.shadowRoot) { // only for slotchange events that originate from slots, belonging to the component's shadow root\n\t\t\tthis._processChildren();\n\t\t}\n\t}\n\n\t/**\n\t * Returns a unique ID for this UI5 Element\n\t *\n\t * @deprecated - This property is not guaranteed in future releases\n\t * @protected\n\t */\n\tget _id() {\n\t\tif (!this.__id) {\n\t\t\tthis.__id = `ui5wc_${++autoId}`;\n\t\t}\n\n\t\treturn this.__id;\n\t}\n\n\trender() {\n\t\tconst template = (this.constructor as typeof UI5Element).template;\n\t\treturn executeTemplate(template!, this);\n\t}\n\n\t/**\n\t * Do not call this method from derivatives of UI5Element, use \"onEnterDOM\" only\n\t * @private\n\t */\n\tasync connectedCallback() {\n\t\tif (DEV_MODE) {\n\t\t\tconst props = (this.constructor as typeof UI5Element).getMetadata().getProperties();\n\t\t\tfor (const [prop, propData] of Object.entries(props)) { // eslint-disable-line\n\t\t\t\tif (Object.hasOwn(this, prop) && !this.initializedProperties.has(prop)) {\n\t\t\t\t\t// initialized properties should not trigger this error as they will be reassigned, only property initializers will trigger this in case unsupported TS mode\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(`[UI5-FWK] ${(this.constructor as typeof UI5Element).getMetadata().getTag()} has a property [${prop}] that is shadowed by the instance. Updates to this property will not invalidate the component. Possible reason is TS target ES2022 or TS useDefineForClassFields`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\n\t\tthis.setAttribute(ctor.getMetadata().getPureTag(), \"\");\n\t\tif (ctor.getMetadata().supportsF6FastNavigation()) {\n\t\t\tthis.setAttribute(\"data-sap-ui-fastnavgroup\", \"true\");\n\t\t}\n\n\t\tconst slotsAreManaged = ctor.getMetadata().slotsAreManaged();\n\n\t\tthis._inDOM = true;\n\n\t\tif (slotsAreManaged) {\n\t\t\t// always register the observer before yielding control to the main thread (await)\n\t\t\tthis._startObservingDOMChildren();\n\t\t\tawait this._processChildren();\n\t\t}\n\n\t\tif (!this._inDOM) { // Component removed from DOM while _processChildren was running\n\t\t\treturn;\n\t\t}\n\n\t\tif (!ctor.asyncFinished) {\n\t\t\tawait ctor.definePromise;\n\t\t}\n\n\t\trenderImmediately(this);\n\t\tthis._domRefReadyPromise._deferredResolve!();\n\t\tthis._fullyConnected = true;\n\t\tthis.onEnterDOM();\n\t}\n\n\t/**\n\t * Do not call this method from derivatives of UI5Element, use \"onExitDOM\" only\n\t * @private\n\t */\n\tdisconnectedCallback() {\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\t\tconst slotsAreManaged = ctor.getMetadata().slotsAreManaged();\n\n\t\tthis._inDOM = false;\n\n\t\tif (slotsAreManaged) {\n\t\t\tthis._stopObservingDOMChildren();\n\t\t}\n\n\t\tif (this._fullyConnected) {\n\t\t\tthis.onExitDOM();\n\t\t\tthis._fullyConnected = false;\n\t\t}\n\n\t\tthis._domRefReadyPromise._deferredResolve!();\n\n\t\tcancelRender(this);\n\t}\n\n\t/**\n\t * Called every time before the component renders.\n\t * @public\n\t */\n\tonBeforeRendering(): void {}\n\n\t/**\n\t * Called every time after the component renders.\n\t * @public\n\t */\n\tonAfterRendering(): void {}\n\n\t/**\n\t * Called on connectedCallback - added to the DOM.\n\t * @public\n\t */\n\tonEnterDOM(): void {}\n\n\t/**\n\t * Called on disconnectedCallback - removed from the DOM.\n\t * @public\n\t */\n\tonExitDOM(): void {}\n\n\t/**\n\t * @private\n\t */\n\t_startObservingDOMChildren() {\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\t\tconst metadata = ctor.getMetadata();\n\t\tconst shouldObserveChildren = metadata.hasSlots();\n\n\t\tif (!shouldObserveChildren) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst canSlotText = metadata.canSlotText();\n\t\tconst mutationObserverOptions = {\n\t\t\tchildList: true,\n\t\t\tsubtree: canSlotText,\n\t\t\tcharacterData: canSlotText,\n\t\t};\n\t\tobserveDOMNode(this, this._processChildren.bind(this) as MutationCallback, mutationObserverOptions);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_stopObservingDOMChildren() {\n\t\tunobserveDOMNode(this);\n\t}\n\n\t/**\n\t * Note: this method is also manually called by \"compatibility/patchNodeValue.js\"\n\t * @private\n\t */\n\tasync _processChildren() {\n\t\tconst hasSlots = (this.constructor as typeof UI5Element).getMetadata().hasSlots();\n\t\tif (hasSlots) {\n\t\t\tawait this._updateSlots();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tasync _updateSlots() {\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\t\tconst slotsMap = ctor.getMetadata().getSlots();\n\t\tconst canSlotText = ctor.getMetadata().canSlotText();\n\t\tconst domChildren = Array.from(canSlotText ? this.childNodes : this.children) as Array<Node>;\n\n\t\tconst slotsCachedContentMap = new Map<string, Array<SlotValue>>(); // Store here the content of each slot before the mutation occurred\n\t\tconst propertyNameToSlotMap = new Map<string, string>(); // Used for reverse lookup to determine to which slot the property name corresponds\n\n\t\t// Init the _state object based on the supported slots and store the previous values\n\t\tfor (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line\n\t\t\tconst propertyName = slotData.propertyName || slotName;\n\t\t\tpropertyNameToSlotMap.set(propertyName, slotName);\n\t\t\tslotsCachedContentMap.set(propertyName, [...(this._state[propertyName] as Array<SlotValue>)]);\n\t\t\tthis._clearSlot(slotName, slotData);\n\t\t}\n\n\t\tconst autoIncrementMap = new Map<string, number>();\n\t\tconst slottedChildrenMap = new Map<string, Array<{child: Node, idx: number }>>();\n\n\t\tconst allChildrenUpgraded = domChildren.map(async (child, idx) => {\n\t\t\t// Determine the type of the child (mainly by the slot attribute)\n\t\t\tconst slotName = getSlotName(child);\n\t\t\tconst slotData = slotsMap[slotName];\n\n\t\t\t// Check if the slotName is supported\n\t\t\tif (slotData === undefined) {\n\t\t\t\tif (slotName !== \"default\") {\n\t\t\t\t\tconst validValues = Object.keys(slotsMap).join(\", \");\n\t\t\t\t\tconsole.warn(`Unknown slotName: ${slotName}, ignoring`, child, `Valid values are: ${validValues}`); // eslint-disable-line\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For children that need individual slots, calculate them\n\t\t\tif (slotData.individualSlots) {\n\t\t\t\tconst nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;\n\t\t\t\tautoIncrementMap.set(slotName, nextIndex);\n\t\t\t\t(child as SlottedChild)._individualSlot = `${slotName}-${nextIndex}`;\n\t\t\t}\n\n\t\t\t// Await for not-yet-defined custom elements\n\t\t\tif (child instanceof HTMLElement) {\n\t\t\t\tconst localName = child.localName;\n\t\t\t\tconst shouldWaitForCustomElement = localName.includes(\"-\") && !shouldIgnoreCustomElement(localName);\n\n\t\t\t\tif (shouldWaitForCustomElement) {\n\t\t\t\t\tconst isDefined = customElements.get(localName);\n\t\t\t\t\tif (!isDefined) {\n\t\t\t\t\t\tconst whenDefinedPromise = customElements.whenDefined(localName); // Class registered, but instances not upgraded yet\n\t\t\t\t\t\tlet timeoutPromise = elementTimeouts.get(localName);\n\t\t\t\t\t\tif (!timeoutPromise) {\n\t\t\t\t\t\t\ttimeoutPromise = new Promise(resolve => setTimeout(resolve, 1000));\n\t\t\t\t\t\t\telementTimeouts.set(localName, timeoutPromise);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait Promise.race([whenDefinedPromise, timeoutPromise]);\n\t\t\t\t\t}\n\t\t\t\t\tcustomElements.upgrade(child);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchild = (ctor.getMetadata().constructor as typeof UI5ElementMetadata).validateSlotValue(child, slotData);\n\n\t\t\t// Listen for any invalidation on the child if invalidateOnChildChange is true or an object (ignore when false or not set)\n\t\t\tif (instanceOfUI5Element(child) && slotData.invalidateOnChildChange) {\n\t\t\t\tconst childChangeListener = this._getChildChangeListener(slotName);\n\t\t\t\tchild.attachInvalidate.call(child, childChangeListener);\n\t\t\t}\n\n\t\t\t// Listen for the slotchange event if the child is a slot itself\n\t\t\tif (child instanceof HTMLSlotElement) {\n\t\t\t\tthis._attachSlotChange(child, slotName, !!slotData.invalidateOnChildChange);\n\t\t\t}\n\n\t\t\tconst propertyName = slotData.propertyName || slotName;\n\n\t\t\tif (slottedChildrenMap.has(propertyName)) {\n\t\t\t\tslottedChildrenMap.get(propertyName)!.push({ child, idx });\n\t\t\t} else {\n\t\t\t\tslottedChildrenMap.set(propertyName, [{ child, idx }]);\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.all(allChildrenUpgraded);\n\n\t\t// Distribute the child in the _state object, keeping the Light DOM order,\n\t\t// not the order elements are defined.\n\t\tslottedChildrenMap.forEach((children, propertyName) => {\n\t\t\tthis._state[propertyName] = children.sort((a, b) => a.idx - b.idx).map(_ => _.child);\n\t\t\tthis._state[kebabToCamelCase(propertyName)] = this._state[propertyName];\n\t\t});\n\n\t\t// Compare the content of each slot with the cached values and invalidate for the ones that changed\n\t\tlet invalidated = false;\n\t\tfor (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line\n\t\t\tconst propertyName = slotData.propertyName || slotName;\n\t\t\tif (!arraysAreEqual(slotsCachedContentMap.get(propertyName)!, this._state[propertyName] as Array<SlotValue>)) {\n\t\t\t\t_invalidate.call(this, {\n\t\t\t\t\ttype: \"slot\",\n\t\t\t\t\tname: propertyNameToSlotMap.get(propertyName)!,\n\t\t\t\t\treason: \"children\",\n\t\t\t\t});\n\n\t\t\t\tinvalidated = true;\n\n\t\t\t\tif (ctor.getMetadata().isFormAssociated()) {\n\t\t\t\t\tsetFormValue(this as unknown as IFormInputElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If none of the slots had an invalidation due to changes to immediate children,\n\t\t// the change is considered to be text content of the default slot\n\t\tif (!invalidated) {\n\t\t\t_invalidate.call(this, {\n\t\t\t\ttype: \"slot\",\n\t\t\t\tname: \"default\",\n\t\t\t\treason: \"textcontent\",\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Removes all children from the slot and detaches listeners, if any\n\t * @private\n\t */\n\t_clearSlot(slotName: string, slotData: Slot) {\n\t\tconst propertyName = slotData.propertyName || slotName;\n\t\tconst children = this._state[propertyName] as Array<SlotValue>;\n\n\t\tchildren.forEach(child => {\n\t\t\tif (instanceOfUI5Element(child)) {\n\t\t\t\tconst childChangeListener = this._getChildChangeListener(slotName);\n\t\t\t\tchild.detachInvalidate.call(child, childChangeListener);\n\t\t\t}\n\n\t\t\tif (child instanceof HTMLSlotElement) {\n\t\t\t\tthis._detachSlotChange(child, slotName);\n\t\t\t}\n\t\t});\n\n\t\tthis._state[propertyName] = [];\n\t\tthis._state[kebabToCamelCase(propertyName)] = this._state[propertyName];\n\t}\n\n\t/**\n\t * Attach a callback that will be executed whenever the component is invalidated\n\t *\n\t * @param callback\n\t * @public\n\t */\n\tattachInvalidate(callback: (param: InvalidationInfo) => void): void {\n\t\tthis._invalidationEventProvider.attachEvent(\"invalidate\", callback);\n\t}\n\n\t/**\n\t * Detach the callback that is executed whenever the component is invalidated\n\t *\n\t * @param callback\n\t * @public\n\t */\n\tdetachInvalidate(callback: (param: InvalidationInfo) => void): void {\n\t\tthis._invalidationEventProvider.detachEvent(\"invalidate\", callback);\n\t}\n\n\t/**\n\t * Callback that is executed whenever a monitored child changes its state\n\t *\n\t * @param slotName the slot in which a child was invalidated\n\t * @param childChangeInfo the changeInfo object for the child in the given slot\n\t * @private\n\t */\n\t_onChildChange(slotName: string, childChangeInfo: ChangeInfo) {\n\t\tif (!(this.constructor as typeof UI5Element).getMetadata().shouldInvalidateOnChildChange(slotName, childChangeInfo.type, childChangeInfo.name)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The component should be invalidated as this type of change on the child is listened for\n\t\t// However, no matter what changed on the child (property/slot), the invalidation is registered as \"type=slot\" for the component itself\n\t\t_invalidate.call(this, {\n\t\t\ttype: \"slot\",\n\t\t\tname: slotName,\n\t\t\treason: \"childchange\",\n\t\t\tchild: childChangeInfo.target,\n\t\t});\n\t}\n\n\t/**\n\t * Do not override this method in derivatives of UI5Element\n\t * @private\n\t */\n\tattributeChangedCallback(name: string, oldValue: string | null, newValue: string | null) {\n\t\tlet newPropertyValue: PropertyValue;\n\t\tif (this._doNotSyncAttributes.has(name)) { // This attribute is mutated internally, not by the user\n\t\t\treturn;\n\t\t}\n\n\t\tconst properties = (this.constructor as typeof UI5Element).getMetadata().getProperties();\n\t\tconst realName = name.replace(/^ui5-/, \"\");\n\t\tconst nameInCamelCase = kebabToCamelCase(realName);\n\t\tif (properties.hasOwnProperty(nameInCamelCase)) { // eslint-disable-line\n\t\t\tconst propData = properties[nameInCamelCase];\n\n\t\t\tconst converter = propData.converter ?? defaultConverter;\n\t\t\tnewPropertyValue = converter.fromAttribute(newValue, propData.type);\n\n\t\t\t(this as Record<string, any>)[nameInCamelCase] = newPropertyValue;\n\t\t}\n\t}\n\n\tformAssociatedCallback() {\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\n\t\tif (!ctor.getMetadata().isFormAssociated()) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdateFormValue(this);\n\t}\n\n\tstatic get formAssociated() {\n\t\treturn this.getMetadata().isFormAssociated();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_updateAttribute(name: string, newValue: PropertyValue) {\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\n\t\tif (!ctor.getMetadata().hasAttribute(name)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst properties = ctor.getMetadata().getProperties();\n\t\tconst propData = properties[name];\n\t\tconst attrName = camelToKebabCase(name);\n\t\tconst converter = propData.converter || defaultConverter;\n\n\t\tif (DEV_MODE) {\n\t\t\tconst tag = (this.constructor as typeof UI5Element).getMetadata().getTag();\n\t\t\tif (typeof newValue === \"boolean\" && propData.type !== Boolean) {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tconsole.error(`[UI5-FWK] boolean value for property [${name}] of component [${tag}] is missing \"{ type: Boolean }\" in its property decorator. Attribute conversion will treat it as a string. If this is intended, pass the value converted to string, otherwise add the type to the property decorator`);\n\t\t\t}\n\t\t\tif (typeof newValue === \"number\" && propData.type !== Number) {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tconsole.error(`[UI5-FWK] numeric value for property [${name}] of component [${tag}] is missing \"{ type: Number }\" in its property decorator. Attribute conversion will treat it as a string. If this is intended, pass the value converted to string, otherwise add the type to the property decorator`);\n\t\t\t}\n\t\t\tif (typeof newValue === \"string\" && propData.type && propData.type !== String) {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tconsole.error(`[UI5-FWK] string value for property [${name}] of component [${tag}] which has a non-string type [${propData.type}] in its property decorator. Attribute conversion will stop and keep the string value in the property.`);\n\t\t\t}\n\t\t}\n\n\t\tconst newAttrValue = converter.toAttribute(newValue, propData.type);\n\t\tthis._doNotSyncAttributes.add(attrName); // skip the attributeChangedCallback call for this attribute\n\t\tif (newAttrValue === null || newAttrValue === undefined) { // null means there must be no attribute for the current value of the property\n\t\t\tthis.removeAttribute(attrName); // remove the attribute safely (will not trigger synchronization to the property value due to the above line)\n\t\t} else {\n\t\t\tthis.setAttribute(attrName, newAttrValue); // setting attributes from properties should not trigger the property setter again\n\t\t}\n\t\tthis._doNotSyncAttributes.delete(attrName); // enable synchronization again for this attribute\n\t}\n\n\t/**\n\t * Returns a singleton event listener for the \"change\" event of a child in a given slot\n\t *\n\t * @param slotName the name of the slot, where the child is\n\t * @private\n\t */\n\t_getChildChangeListener(slotName: string): ChildChangeListener {\n\t\tif (!this._childChangeListeners.has(slotName)) {\n\t\t\tthis._childChangeListeners.set(slotName, this._onChildChange.bind(this, slotName));\n\t\t}\n\t\treturn this._childChangeListeners.get(slotName)!;\n\t}\n\n\t/**\n\t * Returns a singleton slotchange event listener that invalidates the component due to changes in the given slot\n\t *\n\t * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is\n\t * @private\n\t */\n\t_getSlotChangeListener(slotName: string): SlotChangeListener {\n\t\tif (!this._slotChangeListeners.has(slotName)) {\n\t\t\tthis._slotChangeListeners.set(slotName, this._onSlotChange.bind(this, slotName));\n\t\t}\n\t\treturn this._slotChangeListeners.get(slotName)!;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_attachSlotChange(slot: HTMLSlotElement, slotName: string, invalidateOnChildChange: boolean) {\n\t\tconst slotChangeListener = this._getSlotChangeListener(slotName);\n\t\tslot.addEventListener(\"slotchange\", (e: Event) => {\n\t\t\tslotChangeListener.call(slot, e);\n\n\t\t\tif (invalidateOnChildChange) {\n\t\t\t\t// Detach listeners for UI5 Elements that used to be in this slot\n\t\t\t\tconst previousChildren = this._slotsAssignedNodes.get(slot);\n\t\t\t\tif (previousChildren) {\n\t\t\t\t\tpreviousChildren.forEach(child => {\n\t\t\t\t\t\tif (instanceOfUI5Element(child)) {\n\t\t\t\t\t\t\tconst childChangeListener = this._getChildChangeListener(slotName);\n\t\t\t\t\t\t\tchild.detachInvalidate.call(child, childChangeListener);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Attach listeners for UI5 Elements that are now in this slot\n\t\t\t\tconst newChildren = getSlottedNodesList([slot]);\n\t\t\t\tthis._slotsAssignedNodes.set(slot, newChildren);\n\t\t\t\tnewChildren.forEach(child => {\n\t\t\t\t\tif (instanceOfUI5Element(child)) {\n\t\t\t\t\t\tconst childChangeListener = this._getChildChangeListener(slotName);\n\t\t\t\t\t\tchild.attachInvalidate.call(child, childChangeListener);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_detachSlotChange(child: HTMLSlotElement, slotName: string) {\n\t\tchild.removeEventListener(\"slotchange\", this._getSlotChangeListener(slotName));\n\t}\n\n\t/**\n\t * Whenever a slot element is slotted inside a UI5 Web Component, its slotchange event invalidates the component\n\t * Note: this \"slotchange\" listener is for slots that are children of the component (in the light dom, as opposed to slots rendered by the component in the shadow root)\n\t *\n\t * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is\n\t * @private\n\t */\n\t_onSlotChange(slotName: string) {\n\t\t_invalidate.call(this, {\n\t\t\ttype: \"slot\",\n\t\t\tname: slotName,\n\t\t\treason: \"slotchange\",\n\t\t});\n\t}\n\n\t/**\n\t * A callback that is executed each time an already rendered component is invalidated (scheduled for re-rendering)\n\t *\n\t * @param  changeInfo An object with information about the change that caused invalidation.\n\t * The object can have the following properties:\n\t *  - type: (property|slot) tells what caused the invalidation\n\t *   1) property: a property value was changed either directly or as a result of changing the corresponding attribute\n\t *   2) slot: a slotted node(nodes) changed in one of several ways (see \"reason\")\n\t *\n\t *  - name: the name of the property or slot that caused the invalidation\n\t *\n\t *  - reason: (children|textcontent|childchange|slotchange) relevant only for type=\"slot\" only and tells exactly what changed in the slot\n\t *   1) children: immediate children (HTML elements or text nodes) were added, removed or reordered in the slot\n\t *   2) textcontent: text nodes in the slot changed value (or nested text nodes were added or changed value). Can only trigger for slots of \"type: Node\"\n\t *   3) slotchange: a slot element, slotted inside that slot had its \"slotchange\" event listener called. This practically means that transitively slotted children changed.\n\t *\t  Can only trigger if the child of a slot is a slot element itself.\n\t *   4) childchange: indicates that a UI5Element child in that slot was invalidated and in turn invalidated the component.\n\t *\t  Can only trigger for slots with \"invalidateOnChildChange\" metadata descriptor\n\t *\n\t *  - newValue: the new value of the property (for type=\"property\" only)\n\t *\n\t *  - oldValue: the old value of the property (for type=\"property\" only)\n\t *\n\t *  - child the child that was changed (for type=\"slot\" and reason=\"childchange\" only)\n\t *\n\t * @public\n\t */\n\tonInvalidation(changeInfo: ChangeInfo): void {} // eslint-disable-line\n\n\tupdateAttributes() {\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\t\tconst props = ctor.getMetadata().getProperties();\n\t\tfor (const [prop, propData] of Object.entries(props)) { // eslint-disable-line\n\t\t\tthis._updateAttribute(prop, (this as unknown as Record<string, PropertyValue>)[prop]);\n\t\t}\n\t}\n\n\t/**\n\t * Do not call this method directly, only intended to be called by js\n\t * @protected\n\t */\n\t_render() {\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\t\tconst hasIndividualSlots = ctor.getMetadata().hasIndividualSlots();\n\n\t\t// restore properties that were initialized before `define` by calling the setter\n\t\tif (this.initializedProperties.size > 0) {\n\t\t\tArray.from(this.initializedProperties.entries()).forEach(([prop, value]) => {\n\t\t\t\tdelete (this as Record<string, unknown>)[prop];\n\t\t\t\t(this as Record<string, unknown>)[prop] = value;\n\t\t\t});\n\t\t\tthis.initializedProperties.clear();\n\t\t}\n\t\t// suppress invalidation to prevent state changes scheduling another rendering\n\t\tthis._suppressInvalidation = true;\n\n\t\ttry\t{\n\t\t\tthis.onBeforeRendering();\n\n\t\t\tif (!this._rendered) {\n\t\t\t\t// first time rendering, previous setters might have been initializers from the constructor - update attributes here\n\t\t\t\tthis.updateAttributes();\n\t\t\t}\n\n\t\t\t// Intended for framework usage only. Currently ItemNavigation updates tab indexes after the component has updated its state but before the template is rendered\n\t\t\tthis._componentStateFinalizedEventProvider.fireEvent(\"componentStateFinalized\");\n\t\t} finally {\n\t\t\t// always resume normal invalidation handling\n\t\t\tthis._suppressInvalidation = false;\n\t\t}\n\n\t\t// Update the shadow root with the render result\n\t\t/*\n\t\tif (this._changedState.length) {\n\t\t\tlet element = this.localName;\n\t\t\tif (this.id) {\n\t\t\t\telement = `${element}#${this.id}`;\n\t\t\t}\n\t\t\tconsole.log(\"Re-rendering:\", element, this._changedState.map(x => { // eslint-disable-line\n\t\t\t\tlet res = `${x.type}`;\n\t\t\t\tif (x.reason) {\n\t\t\t\t\tres = `${res}(${x.reason})`;\n\t\t\t\t}\n\t\t\t\tres = `${res}: ${x.name}`;\n\t\t\t\tif (x.type === \"property\") {\n\t\t\t\t\tres = `${res} ${JSON.stringify(x.oldValue)} => ${JSON.stringify(x.newValue)}`;\n\t\t\t\t}\n\n\t\t\t\treturn res;\n\t\t\t}));\n\t\t}\n\t\t*/\n\t\tthis._changedState = [];\n\n\t\t// Update shadow root\n\t\tif (ctor._needsShadowDOM()) {\n\t\t\tupdateShadowRoot(this);\n\t\t}\n\t\tthis._rendered = true;\n\n\t\t// Safari requires that children get the slot attribute only after the slot tags have been rendered in the shadow DOM\n\t\tif (hasIndividualSlots) {\n\t\t\tthis._assignIndividualSlotsToChildren();\n\t\t}\n\n\t\t// Call the onAfterRendering hook\n\t\tthis.onAfterRendering();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_assignIndividualSlotsToChildren() {\n\t\tconst domChildren = Array.from(this.children);\n\n\t\tdomChildren.forEach((child: Record<string, any>) => {\n\t\t\tif (child._individualSlot) {\n\t\t\t\tchild.setAttribute(\"slot\", child._individualSlot);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_waitForDomRef() {\n\t\treturn this._domRefReadyPromise;\n\t}\n\n\t/**\n\t * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template\n\t * *Note:* For logical (abstract) elements (items, options, etc...), returns the part of the parent's DOM that represents this option\n\t * Use this method instead of \"this.shadowRoot\" to read the Shadow DOM, if ever necessary\n\t *\n\t * @public\n\t */\n\tgetDomRef(): HTMLElement | undefined {\n\t\t// If a component set _getRealDomRef to its children, use the return value of this function\n\t\tif (typeof this._getRealDomRef === \"function\") {\n\t\t\treturn this._getRealDomRef();\n\t\t}\n\n\t\tif (!this.shadowRoot || this.shadowRoot.children.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.shadowRoot.children[0] as HTMLElement;\n\t}\n\n\t/**\n\t * Returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n\t * This is the element that will receive the focus by default.\n\t * @public\n\t */\n\tgetFocusDomRef(): HTMLElement | undefined {\n\t\tconst domRef = this.getDomRef();\n\t\tif (domRef) {\n\t\t\tconst focusRef = domRef.querySelector(\"[data-sap-focus-ref]\") as HTMLElement;\n\t\t\treturn focusRef || domRef;\n\t\t}\n\t}\n\n\t/**\n\t * Waits for dom ref and then returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n\t * This is the element that will receive the focus by default.\n\t * @public\n\t */\n\tasync getFocusDomRefAsync(): Promise<HTMLElement | undefined> {\n\t\tawait this._waitForDomRef();\n\t\treturn this.getFocusDomRef();\n\t}\n\n\t/**\n\t * Set the focus to the element, returned by \"getFocusDomRef()\" (marked by \"data-sap-focus-ref\")\n\t * @param focusOptions additional options for the focus\n\t * @public\n\t */\n\tasync focus(focusOptions?: FocusOptions): Promise<void> {\n\t\tawait this._waitForDomRef();\n\n\t\tconst focusDomRef = this.getFocusDomRef();\n\t\tif (focusDomRef === this) {\n\t\t\tHTMLElement.prototype.focus.call(this, focusOptions);\n\t\t} else if (focusDomRef && typeof focusDomRef.focus === \"function\") {\n\t\t\tfocusDomRef.focus(focusOptions);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @public\n\t * @param name - name of the event\n\t * @param data - additional data for the event\n\t * @param cancelable - true, if the user can call preventDefault on the event object\n\t * @param bubbles - true, if the event bubbles\n\t * @returns false, if the event was cancelled (preventDefault called), true otherwise\n\t * @deprecated use fireDecoratorEvent instead\n\t */\n\tfireEvent<T>(name: string, data?: T, cancelable = false, bubbles = true): boolean {\n\t\tconst eventResult = this._fireEvent(name, data, cancelable, bubbles);\n\t\tconst pascalCaseEventName = kebabToPascalCase(name);\n\n\t\t// pascal events are more convinient for native react usage\n\t\t// live-change:\n\t\t//\t Before: onlive-change\n\t\t//\t After: onLiveChange\n\t\tif (pascalCaseEventName !== name) {\n\t\t\treturn eventResult && this._fireEvent(pascalCaseEventName, data, cancelable, bubbles);\n\t\t}\n\n\t\treturn eventResult;\n\t}\n\n\t/**\n\t * Fires a custom event, configured via the \"event\" decorator.\n\t * @public\n\t * @param name - name of the event\n\t * @param data - additional data for the event\n\t * @returns false, if the event was cancelled (preventDefault called), true otherwise\n\t */\n\tfireDecoratorEvent<N extends keyof this[\"eventDetails\"]>(name: N, data?: this[\"eventDetails\"][N] | undefined): boolean {\n\t\tconst eventData = this.getEventData(name as string);\n\t\tconst cancellable = eventData ? eventData.cancelable : false;\n\t\tconst bubbles = eventData ? eventData.bubbles : false;\n\n\t\tconst eventResult = this._fireEvent(name as string, data, cancellable, bubbles);\n\t\tconst pascalCaseEventName = kebabToPascalCase(name as string);\n\n\t\t// pascal events are more convinient for native react usage\n\t\t// live-change:\n\t\t//\t Before: onlive-change\n\t\t//\t After: onLiveChange\n\t\tif (pascalCaseEventName !== name) {\n\t\t\treturn eventResult && this._fireEvent(pascalCaseEventName, data, cancellable, bubbles);\n\t\t}\n\n\t\treturn eventResult;\n\t}\n\n\t_fireEvent<T>(name: string, data?: T, cancelable = false, bubbles = true) {\n\t\tconst noConflictEvent = new CustomEvent<T>(`ui5-${name}`, {\n\t\t\tdetail: data,\n\t\t\tcomposed: false,\n\t\t\tbubbles,\n\t\t\tcancelable,\n\t\t});\n\n\t\t// This will be false if the no-conflict event is prevented\n\t\tconst noConflictEventResult = this.dispatchEvent(noConflictEvent);\n\n\t\tif (skipOriginalEvent(name)) {\n\t\t\treturn noConflictEventResult;\n\t\t}\n\n\t\tconst normalEvent = new CustomEvent<T>(name, {\n\t\t\tdetail: data,\n\t\t\tcomposed: false,\n\t\t\tbubbles,\n\t\t\tcancelable,\n\t\t});\n\n\t\t// This will be false if the normal event is prevented\n\t\tconst normalEventResult = this.dispatchEvent(normalEvent);\n\n\t\t// Return false if any of the two events was prevented (its result was false).\n\t\treturn normalEventResult && noConflictEventResult;\n\t}\n\n\tgetEventData(name: string) {\n\t\tconst ctor = this.constructor as typeof UI5Element;\n\t\tconst eventMap = ctor.getMetadata().getEvents();\n\t\treturn eventMap[name];\n\t}\n\n\t/**\n\t * Returns the actual children, associated with a slot.\n\t * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.\n\t * @public\n\t */\n\tgetSlottedNodes<T = Node>(slotName: string): Array<T> {\n\t\treturn getSlottedNodesList((this as unknown as Record<string, Array<SlotValue>>)[slotName]) as Array<T>;\n\t}\n\n\t/**\n\t * Attach a callback that will be executed whenever the component's state is finalized\n\t *\n\t * @param callback\n\t * @public\n\t */\n\tattachComponentStateFinalized(callback: () => void): void {\n\t\tthis._componentStateFinalizedEventProvider.attachEvent(\"componentStateFinalized\", callback);\n\t}\n\n\t/**\n\t * Detach the callback that is executed whenever the component's state is finalized\n\t *\n\t * @param callback\n\t * @public\n\t */\n\tdetachComponentStateFinalized(callback: () => void): void {\n\t\tthis._componentStateFinalizedEventProvider.detachEvent(\"componentStateFinalized\", callback);\n\t}\n\n\t/**\n\t * Determines whether the component should be rendered in RTL mode or not.\n\t * Returns: \"rtl\", \"ltr\" or undefined\n\t *\n\t * @public\n\t * @default undefined\n\t */\n\tget effectiveDir(): string | undefined {\n\t\tmarkAsRtlAware(this.constructor as typeof UI5Element); // if a UI5 Element calls this method, it's considered to be rtl-aware\n\t\treturn getEffectiveDir(this);\n\t}\n\n\t/**\n\t * Used to duck-type UI5 elements without using instanceof\n\t * @public\n\t * @default true\n\t */\n\tget isUI5Element(): boolean {\n\t\treturn true;\n\t}\n\n\tget isUI5AbstractElement(): boolean {\n\t\treturn !(this.constructor as typeof UI5Element)._needsShadowDOM();\n\t}\n\n\tget classes(): ClassMap {\n\t\treturn {};\n\t}\n\n\t/**\n\t * Returns the component accessibility info.\n\t * @private\n\t */\n\tget accessibilityInfo(): AccessibilityInfo {\n\t\treturn {};\n\t}\n\n\t/**\n\t * Do not override this method in derivatives of UI5Element, use metadata properties instead\n\t * @private\n\t */\n\tstatic get observedAttributes() {\n\t\treturn this.getMetadata().getAttributesList();\n\t}\n\n\t/**\n\t * Returns all tags, used inside component's template subject to scoping.\n\t * returns {Array[]} // TODO add @\n\t * @private\n\t */\n\tstatic get tagsToScope(): Array<string> {\n\t\tconst componentTag = this.getMetadata().getPureTag();\n\t\tconst tagsToScope = this.getUniqueDependencies().map((dep: typeof UI5Element) => dep.getMetadata().getPureTag()).filter(shouldScopeCustomElement);\n\n\t\tif (shouldScopeCustomElement(componentTag)) {\n\t\t\ttagsToScope.push(componentTag);\n\t\t}\n\n\t\treturn tagsToScope;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _needsShadowDOM() {\n\t\treturn !!this.template || Object.prototype.hasOwnProperty.call(this.prototype, \"render\");\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _generateAccessors() {\n\t\tconst proto = this.prototype;\n\t\tconst slotsAreManaged = this.getMetadata().slotsAreManaged();\n\n\t\t// Properties\n\t\tconst properties = this.getMetadata().getProperties();\n\t\tfor (const [prop, propData] of Object.entries(properties)) { // eslint-disable-line\n\t\t\tif (!isValidPropertyName(prop)) {\n\t\t\t\tconsole.warn(`\"${prop}\" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */\n\t\t\t}\n\n\t\t\tconst descriptor = getPropertyDescriptor(proto, prop);\n\t\t\t// if the decorator is on a setter, proxy the new setter to it\n\t\t\tlet origSet: (v: any) => void;\n\t\t\tif (descriptor?.set) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\t\torigSet = descriptor.set;\n\t\t\t}\n\t\t\t// if the decorator is on a setter, there will be a corresponding getter - proxy the new getter to it\n\t\t\tlet origGet: () => PropertyValue;\n\t\t\tif (descriptor?.get) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\t\torigGet = descriptor.get;\n\t\t\t}\n\n\t\t\tObject.defineProperty(proto, prop, {\n\t\t\t\tget(this: UI5Element) {\n\t\t\t\t\t// proxy the getter to the original accessor if there was one\n\t\t\t\t\tif (origGet) {\n\t\t\t\t\t\treturn origGet.call(this);\n\t\t\t\t\t}\n\t\t\t\t\treturn this._state[prop];\n\t\t\t\t},\n\n\t\t\t\tset(this: UI5Element, value: PropertyValue) {\n\t\t\t\t\tconst ctor = this.constructor as typeof UI5Element;\n\t\t\t\t\tconst oldState = origGet ? origGet.call(this) : this._state[prop];\n\n\t\t\t\t\tconst isDifferent = oldState !== value;\n\t\t\t\t\tif (isDifferent) {\n\t\t\t\t\t\t// if the decorator is on a setter, use it for storage\n\t\t\t\t\t\tif (origSet) {\n\t\t\t\t\t\t\torigSet.call(this, value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._state[prop] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_invalidate.call(this, {\n\t\t\t\t\t\t\ttype: \"property\",\n\t\t\t\t\t\t\tname: prop,\n\t\t\t\t\t\t\tnewValue: value,\n\t\t\t\t\t\t\toldValue: oldState,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (this._rendered) {\n\t\t\t\t\t\t\t// the component is already rendered, indicating it is not the constructor -\n\t\t\t\t\t\t\t// therefore the attribute can be set synchronously.\n\n\t\t\t\t\t\t\t// get the effective value of the property,\n\t\t\t\t\t\t\t// as it might differ from the provided value\n\t\t\t\t\t\t\tconst newValue = origGet ? origGet.call(this) : this._state[prop];\n\n\t\t\t\t\t\t\tthis._updateAttribute(prop, newValue);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (ctor.getMetadata().isFormAssociated()) {\n\t\t\t\t\t\t\tsetFormValue(this as unknown as IFormInputElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\t// Slots\n\t\tif (slotsAreManaged) {\n\t\t\tconst slots = this.getMetadata().getSlots();\n\t\t\tfor (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line\n\t\t\t\tif (!isValidPropertyName(slotName)) {\n\t\t\t\t\tconsole.warn(`\"${slotName}\" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */\n\t\t\t\t}\n\n\t\t\t\tconst propertyName = slotData.propertyName || slotName;\n\t\t\t\tconst propertyDescriptor: PropertyDescriptor = {\n\t\t\t\t\tget(this: UI5Element) {\n\t\t\t\t\t\tif (this._state[propertyName] !== undefined) {\n\t\t\t\t\t\t\treturn this._state[propertyName];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t},\n\t\t\t\t\tset() {\n\t\t\t\t\t\tthrow new Error(\"Cannot set slot content directly, use the DOM APIs (appendChild, removeChild, etc...)\");\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tObject.defineProperty(proto, propertyName, propertyDescriptor);\n\t\t\t\tif (propertyName !== kebabToCamelCase(propertyName)) {\n\t\t\t\t\tObject.defineProperty(proto, kebabToCamelCase(propertyName), propertyDescriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the metadata object for this UI5 Web Component Class\n\t * @protected\n\t */\n\tstatic metadata: Metadata = {};\n\n\t/**\n\t * Returns the CSS for this UI5 Web Component Class\n\t * @protected\n\t */\n\tstatic styles: ComponentStylesData = \"\";\n\n\t/**\n\t * Returns an array with the dependencies for this UI5 Web Component, which could be:\n\t *  - composed components (used in its shadow root)\n\t *  - slotted components that the component may need to communicate with\n\t *\n\t * @deprecated no longer necessary for jsxRenderer-enabled components\n\t * @protected\n\t */\n\tstatic get dependencies(): Array<typeof UI5Element> {\n\t\treturn [];\n\t}\n\n\tstatic cacheUniqueDependencies(this: typeof UI5Element): void {\n\t\tconst filtered = this.dependencies.filter((dep, index, deps) => deps.indexOf(dep) === index);\n\t\tuniqueDependenciesCache.set(this, filtered);\n\t}\n\n\t/**\n\t * Returns a list of the unique dependencies for this UI5 Web Component\n\t *\n\t * @public\n\t */\n\tstatic getUniqueDependencies(this: typeof UI5Element): Array<typeof UI5Element> {\n\t\tif (!uniqueDependenciesCache.has(this)) {\n\t\t\tthis.cacheUniqueDependencies();\n\t\t}\n\n\t\treturn uniqueDependenciesCache.get(this) || [];\n\t}\n\n\t/**\n\t * Hook that will be called upon custom element definition\n\t *\n\t * @protected\n\t * @deprecated use the \"i18n\" decorator for fetching message bundles and the \"cldr\" option in the \"customElements\" decorator for fetching CLDR\n\t */\n\tstatic async onDefine(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tstatic fetchI18nBundles() {\n\t\treturn Promise.all(Object.entries(this.getMetadata().getI18n()).map(pair => {\n\t\t\tconst { bundleName } = pair[1];\n\t\t\treturn getI18nBundle(bundleName);\n\t\t}));\n\t}\n\n\tstatic fetchCLDR() {\n\t\tif (this.getMetadata().needsCLDR()) {\n\t\t\treturn fetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript());\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tstatic asyncFinished: boolean;\n\tstatic definePromise: Promise<void> | undefined;\n\tstatic i18nBundleStorage: Record<string, I18nBundle> = {};\n\n\tstatic get i18nBundles(): Record<string, I18nBundle> {\n\t\treturn this.i18nBundleStorage;\n\t}\n\n\t/**\n\t * Registers a UI5 Web Component in the browser window object\n\t * @public\n\t */\n\tstatic define(): typeof UI5Element {\n\t\tconst defineSequence = async () => {\n\t\t\tawait boot(); // boot must finish first, because it initializes configuration\n\t\t\tconst result = await Promise.all([\n\t\t\t\tthis.fetchI18nBundles(), // uses configuration\n\t\t\t\tthis.fetchCLDR(),\n\t\t\t\tthis.onDefine(),\n\t\t\t]);\n\t\t\tconst [i18nBundles] = result;\n\t\t\tObject.entries(this.getMetadata().getI18n()).forEach((pair, index) => {\n\t\t\t\tconst bundleName = pair[1].bundleName;\n\t\t\t\tthis.i18nBundleStorage[bundleName] = i18nBundles[index];\n\t\t\t});\n\t\t\tthis.asyncFinished = true;\n\t\t};\n\t\tthis.definePromise = defineSequence();\n\n\t\tconst tag = this.getMetadata().getTag();\n\n\t\tconst definedLocally = isTagRegistered(tag);\n\t\tconst definedGlobally = customElements.get(tag);\n\n\t\tif (definedGlobally && !definedLocally) {\n\t\t\trecordTagRegistrationFailure(tag);\n\t\t} else if (!definedGlobally) {\n\t\t\tthis._generateAccessors();\n\t\t\tregisterTag(tag);\n\t\t\tcustomElements.define(tag, this as unknown as CustomElementConstructor);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')\n\t * Note: not to be confused with the \"get metadata()\" method, which returns an object for this class's metadata only\n\t * @public\n\t */\n\tstatic getMetadata(): UI5ElementMetadata {\n\t\tif (this.hasOwnProperty(\"_metadata\")) { // eslint-disable-line\n\t\t\treturn this._metadata;\n\t\t}\n\n\t\tconst metadataObjects = [this.metadata];\n\t\tlet klass = this; // eslint-disable-line\n\t\twhile (klass !== UI5Element) {\n\t\t\tklass = Object.getPrototypeOf(klass);\n\t\t\tmetadataObjects.unshift(klass.metadata);\n\t\t}\n\t\tconst mergedMetadata = merge({}, ...metadataObjects) as Metadata;\n\n\t\tthis._metadata = new UI5ElementMetadata(mergedMetadata);\n\t\treturn this._metadata;\n\t}\n\n\tget validity() { return this._internals.validity; }\n\tget validationMessage() { return this._internals.validationMessage; }\n\tcheckValidity() { return this._internals.checkValidity(); }\n\treportValidity() { return this._internals.reportValidity(); }\n}\n\n/**\n * Always use duck-typing to cover all runtimes on the page.\n */\nconst instanceOfUI5Element = (object: any): object is UI5Element => {\n\treturn \"isUI5Element\" in object;\n};\n\nexport default UI5Element;\nexport {\n\tinstanceOfUI5Element,\n};\nexport type {\n\tChangeInfo,\n\tInvalidationInfo,\n\tRenderer,\n\tSlottedChild,\n};\n"]}