{"version":3,"file":"JsxRenderer.js","sourceRoot":"","sources":["../../src/renderer/JsxRenderer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,uCAAuC,CAAC;AAC9E,OAAO,EAAE,GAAG,EAAE,MAAM,2CAA2C,CAAC;AAIhE,MAAM,oBAAoB,GAAG,IAAI,OAAO,EAA4D,CAAC;AAErG,MAAM,WAAW,GAAa,CAAC,QAAoB,EAAE,SAAyC,EAAE,EAAE;IACjG,IAAI,GAAG,GAAG,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,8DAA8D;QAC9D,iGAAiG;QACjG,GAAG,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC9B,oBAAoB,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACzC,CAAC;IACD,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;IACzC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;AACrF,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import { render, createContext } from \"../thirdparty/preact/preact.module.js\";\nimport { jsx } from \"../thirdparty/preact/jsxRuntime.module.js\";\nimport type UI5Element from \"../UI5Element.js\";\nimport type { Renderer } from \"../UI5Element.js\";\n\nconst instanceToContextMap = new WeakMap<UI5Element, ReturnType<typeof createContext<UI5Element>>>();\n\nconst jsxRenderer: Renderer = (instance: UI5Element, container: HTMLElement | DocumentFragment) => {\n\tlet ctx = instanceToContextMap.get(instance);\n\tif (!ctx) {\n\t\t// create a context holding the element that is being rendered\n\t\t// this contect will be used when adding event listeners - they all will be bound to this element\n\t\tctx = createContext(instance);\n\t\tinstanceToContextMap.set(instance, ctx);\n\t}\n\tconst templateResult = instance.render();\n\trender(jsx(ctx.Provider, { value: instance, children: templateResult }), container);\n};\n\nexport default jsxRenderer;\n"]}