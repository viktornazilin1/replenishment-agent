{"version":3,"file":"ToolbarRegistry.js","sourceRoot":"","sources":["../src/ToolbarRegistry.ts"],"names":[],"mappings":"AAAA,OAAO,iBAAiB,MAAM,mDAAmD,CAAC;AAIlF,MAAM,QAAQ,GAAG,iBAAiB,CAAkC,sBAAsB,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEvG,MAAM,mBAAmB,GAAG,CAAC,YAAgC,EAAE,EAAE;IAChE,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,EAAE,YAAY,CAAC,CAAC;AACrE,CAAC,CAAC;AAEF,MAAM,wBAAwB,GAAG,CAAC,IAAY,EAAE,EAAE;IACjD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QACxB,MAAM,IAAI,KAAK,CAAC,yBAAyB,IAAI,EAAE,CAAC,CAAC;KACjD;IAED,OAAO,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC3B,CAAC,CAAC;AAEF,MAAM,mBAAmB,GAAG,GAAG,EAAE;IAChC,OAAO,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,YAAgC,EAAE,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC9F,CAAC,CAAC;AAEF,MAAM,6BAA6B,GAAG,GAAG,EAAE;IAC1C,OAAO,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,YAAgC,EAAE,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;AACxG,CAAC,CAAC;AAEF,MAAM,yBAAyB,GAAG,GAAG,EAAE;IACtC,OAAO,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,YAAgC,EAAE,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;AAC3G,CAAC,CAAC;AAEF,OAAO,EACN,mBAAmB,EACnB,wBAAwB,EACxB,mBAAmB,EACnB,6BAA6B,EAC7B,yBAAyB,GACzB,CAAC","sourcesContent":["import getSharedResource from \"@ui5/webcomponents-base/dist/getSharedResource.js\";\n\nimport type ToolbarItem from \"./ToolbarItem.js\";\n\nconst registry = getSharedResource<Map<string, typeof ToolbarItem>>(\"ToolbarItem.registry\", new Map());\n\nconst registerToolbarItem = (ElementClass: typeof ToolbarItem) => {\n\tregistry.set(ElementClass.getMetadata().getPureTag(), ElementClass);\n};\n\nconst getRegisteredToolbarItem = (name: string) => {\n\tif (!registry.has(name)) {\n\t\tthrow new Error(`No template found for ${name}`);\n\t}\n\n\treturn registry.get(name);\n};\n\nconst getRegisteredStyles = () => {\n\treturn [...registry.values()].map((ElementClass: typeof ToolbarItem) => ElementClass.styles);\n};\n\nconst getRegisteredStaticAreaStyles = () => {\n\treturn [...registry.values()].map((ElementClass: typeof ToolbarItem) => ElementClass.staticAreaStyles);\n};\n\nconst getRegisteredDependencies = () => {\n\treturn [...registry.values()].map((ElementClass: typeof ToolbarItem) => ElementClass.dependencies).flat();\n};\n\nexport {\n\tregisterToolbarItem,\n\tgetRegisteredToolbarItem,\n\tgetRegisteredStyles,\n\tgetRegisteredStaticAreaStyles,\n\tgetRegisteredDependencies,\n};\n"]}