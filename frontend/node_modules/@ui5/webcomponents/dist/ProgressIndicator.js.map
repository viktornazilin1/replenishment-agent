{"version":3,"file":"ProgressIndicator.js","sourceRoot":"","sources":["../src/ProgressIndicator.ts"],"names":[],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport jsxRenderer from \"@ui5/webcomponents-base/dist/renderer/JsxRenderer.js\";\nimport AnimationMode from \"@ui5/webcomponents-base/dist/types/AnimationMode.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getAnimationMode } from \"@ui5/webcomponents-base/dist/config/AnimationMode.js\";\nimport i18n from \"@ui5/webcomponents-base/dist/decorators/i18n.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport {\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tVALUE_STATE_SUCCESS,\n\tVALUE_STATE_INFORMATION,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport ProgressIndicatorTemplate from \"./ProgressIndicatorTemplate.js\";\n\n// Styles\nimport ProgressIndicatorCss from \"./generated/themes/ProgressIndicator.css.js\";\n\n/**\n * @class\n *\n * ### Overview\n * Shows the progress of a process in a graphical way. To indicate the progress,\n * the inside of the component is filled with a color.\n *\n * ### Responsive Behavior\n * You can change the size of the Progress Indicator by changing its `width` or `height` CSS properties.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/ProgressIndicator.js\";`\n * @csspart bar - Used to style the main bar of the `ui5-progress-indicator`\n * @csspart remaining-bar - Used to style the remaining bar of the `ui5-progress-indicator`\n * @constructor\n * @extends UI5Element\n * @public\n * @since 1.0.0-rc.8\n */\n@customElement({\n\ttag: \"ui5-progress-indicator\",\n\trenderer: jsxRenderer,\n\tstyles: ProgressIndicatorCss,\n\ttemplate: ProgressIndicatorTemplate,\n})\n\nclass ProgressIndicator extends UI5Element {\n\t/**\n\t * Defines the accessible ARIA name of the component.\n\t * @default undefined\n\t * @public\n\t * @since 1.16.0\n\t*/\n\t@property()\n\taccessibleName?: string;\n\n\t/**\n\t * Defines whether the component value is shown.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\thideValue = false;\n\n\t/**\n\t * Specifies the numerical value in percent for the length of the component.\n\t *\n\t * **Note:**\n\t * If a value greater than 100 is provided, the percentValue is set to 100. In other cases of invalid value, percentValue is set to its default of 0.\n\t * @default 0\n\t * @public\n\t */\n\t@property({ type: Number })\n\tvalue = 0;\n\n\t/**\n\t * Specifies the text value to be displayed in the bar.\n\t *\n\t * **Note:**\n\t *\n\t * - If there is no value provided or the value is empty, the default percentage value is shown.\n\t * - If `hideValue` property is `true` both the `displayValue` and `value` property values are not shown.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tdisplayValue?: string;\n\n\t/**\n\t * Defines the value state of the component.\n\t * @default \"None\"\n\t * @public\n\t */\n\t@property()\n\tvalueState: `${ValueState}` = \"None\";\n\n\t@i18n(\"@ui5/webcomponents\")\n\tstatic i18nBundle: I18nBundle;\n\t_previousValue: number;\n\t_transitionDuration: number;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._previousValue = 0;\n\t\tthis._transitionDuration = 0;\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._transitionDuration = Math.abs(this._previousValue - this.validatedValue) * 20;\n\t\tthis._previousValue = this.validatedValue;\n\t}\n\n\tvalueStateTextMappings(): Record<string, string> {\n\t\treturn {\n\t\t\t\"Negative\": ProgressIndicator.i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t\"Critical\": ProgressIndicator.i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t\t\"Positive\": ProgressIndicator.i18nBundle.getText(VALUE_STATE_SUCCESS),\n\t\t\t\"Information\": ProgressIndicator.i18nBundle.getText(VALUE_STATE_INFORMATION),\n\t\t};\n\t}\n\n\tget validatedValue() {\n\t\tif (this.value < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (this.value > 100) {\n\t\t\treturn 100;\n\t\t}\n\n\t\treturn this.value;\n\t}\n\n\tget showValueInRemainingBar() {\n\t\treturn this.value <= 50;\n\t}\n\n\tget shouldAnimate() {\n\t\treturn getAnimationMode() !== AnimationMode.None;\n\t}\n\n\tget valueStateText() {\n\t\tconst percentValue = `${this.validatedValue}%`;\n\t\tconst valueText = this.valueStateTextMappings()[this.valueState];\n\n\t\treturn valueText ? `${percentValue} ${valueText}` : percentValue;\n\t}\n\n\tget showIcon() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n}\n\nProgressIndicator.define();\n\nexport default ProgressIndicator;\n"]}