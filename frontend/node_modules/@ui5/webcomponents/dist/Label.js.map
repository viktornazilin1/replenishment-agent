{"version":3,"file":"Label.js","sourceRoot":"","sources":["../src/Label.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,UAAU,MAAM,4CAA4C,CAAC;AACpE,OAAO,aAAa,MAAM,0DAA0D,CAAC;AACrF,OAAO,QAAQ,MAAM,qDAAqD,CAAC;AAC3E,OAAO,IAAI,MAAM,iDAAiD,CAAC;AACnE,OAAO,WAAW,MAAM,sDAAsD,CAAC;AAG/E,OAAO,EAAE,WAAW,EAAE,MAAM,mCAAmC,CAAC;AAEhE,WAAW;AACX,OAAO,aAAa,MAAM,oBAAoB,CAAC;AAE/C,SAAS;AACT,OAAO,QAAQ,MAAM,iCAAiC,CAAC;AAEvD;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AAQH,IAAM,KAAK,aAAX,MAAM,KAAM,SAAQ,UAAU;IAA9B;;QAWC;;;;;;WAMG;QAEH,cAAS,GAAG,KAAK,CAAC;QAElB;;;;;;;;WAQG;QAEH,aAAQ,GAAG,KAAK,CAAC;QAEjB;;;;;;WAMG;QAEH,iBAAY,GAAsB,QAAQ,CAAC;IAmB5C,CAAC;IAdA,QAAQ;QACP,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACf,OAAO;QACR,CAAC;QAED,MAAM,cAAc,GAAI,IAAI,CAAC,WAAW,EAAkB,CAAC,aAAa,CAAC,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAgB,CAAC;QAC9G,IAAI,cAAc,EAAE,CAAC;YACpB,cAAc,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;IACF,CAAC;IAED,IAAI,YAAY;QACf,OAAO,OAAK,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;CACD,CAAA;AAnDA;IADC,QAAQ,EAAE;kCACE;AAUb;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCACV;AAYlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;uCACX;AAUjB;IADC,QAAQ,EAAE;2CACgC;AAGpC;IADN,IAAI,CAAC,oBAAoB,CAAC;+BACG;AA5CzB,KAAK;IAPV,aAAa,CAAC;QACd,GAAG,EAAE,WAAW;QAChB,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,QAAQ;QAChB,aAAa,EAAE,IAAI;KACnB,CAAC;GACI,KAAK,CA4DV;AAED,KAAK,CAAC,MAAM,EAAE,CAAC;AAEf,eAAe,KAAK,CAAC","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport i18n from \"@ui5/webcomponents-base/dist/decorators/i18n.js\";\nimport jsxRenderer from \"@ui5/webcomponents-base/dist/renderer/JsxRenderer.js\";\nimport type I18nBundle from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport type WrappingType from \"./types/WrappingType.js\";\nimport { LABEL_COLON } from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport LabelTemplate from \"./LabelTemplate.js\";\n\n// Styles\nimport labelCss from \"./generated/themes/Label.css.js\";\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-label` is a component used to represent a label for elements like input, textarea, select.\n * The `for` property of the `ui5-label` must be the same as the id attribute of the related input element.\n * Screen readers read out the label, when the user focuses the labelled control.\n *\n * The `ui5-label` appearance can be influenced by properties,\n * such as `required` and `wrappingType`.\n * The appearance of the Label can be configured in a limited way by using the design property.\n * For a broader choice of designs, you can use custom styles.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/Label\";`\n * @constructor\n * @extends UI5Element\n * @public\n * @slot {Array<Node>} default - Defines the text of the component.\n *\n * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n */\n@customElement({\n\ttag: \"ui5-label\",\n\trenderer: jsxRenderer,\n\ttemplate: LabelTemplate,\n\tstyles: labelCss,\n\tlanguageAware: true,\n})\nclass Label extends UI5Element {\n\t/**\n\t * Defines the labeled input by providing its ID.\n\t *\n\t * **Note:** Can be used with both `ui5-input` and native input.\n\t * @default undefined\n\t * @public\n\t */\n\t@property()\n\tfor?: string;\n\n\t/**\n\t * Defines whether colon is added to the component text.\n\t *\n\t * **Note:** Usually used in forms.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tshowColon = false;\n\n\t/**\n\t * Defines whether an asterisk character is added to the component text.\n\t *\n\t * **Note:** Usually indicates that user input (bound with the `for` property) is required.\n\t * In that case the `required` property of\n\t * the corresponding input should also be set.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\trequired = false;\n\n\t/**\n\t * Defines how the text of a component will be displayed when there is not enough space.\n\t *\n\t * **Note:** for option \"Normal\" the text will wrap and the words will not be broken based on hyphenation.\n\t * @default \"Normal\"\n\t * @public\n\t */\n\t@property()\n\twrappingType: `${WrappingType}` = \"Normal\";\n\n\t@i18n(\"@ui5/webcomponents\")\n\tstatic i18nBundle: I18nBundle;\n\n\t_onclick() {\n\t\tif (!this.for) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst elementToFocus = (this.getRootNode() as HTMLElement).querySelector(`[id=\"${this.for}\"]`) as HTMLElement;\n\t\tif (elementToFocus) {\n\t\t\telementToFocus.focus();\n\t\t}\n\t}\n\n\tget _colonSymbol() {\n\t\treturn Label.i18nBundle.getText(LABEL_COLON);\n\t}\n}\n\nLabel.define();\n\nexport default Label;\n"]}