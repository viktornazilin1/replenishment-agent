{"version":3,"file":"SegmentedButtonItem.js","sourceRoot":"","sources":["../src/SegmentedButtonItem.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,aAAa,MAAM,0DAA0D,CAAC;AACrF,OAAO,QAAQ,MAAM,qDAAqD,CAAC;AAC3E,OAAO,OAAO,MAAM,+CAA+C,CAAC;AAEpE,OAAO,2BAA2B,MAAM,0DAA0D,CAAC;AAEnG,OAAO,YAAY,MAAM,mBAAmB,CAAC;AAC7C,OAAO,YAAY,MAAM,yBAAyB,CAAC;AACnD,OAAO,UAAU,MAAM,uBAAuB,CAAC;AAC/C,OAAO,oBAAoB,MAAM,iCAAiC,CAAC;AACnE,OAAwC,aAAa,CAAC;AACtD,OAAO,IAAI,MAAM,WAAW,CAAC;AAE7B,OAAO,EAAE,oCAAoC,EAAE,MAAM,mCAAmC,CAAC;AAEzF;;;;;;;;;;;;;;;;;;;GAmBG;AAMH,IAAM,mBAAmB,2BAAzB,MAAM,mBAAoB,SAAQ,YAAY;IAiE7C,IAAI,eAAe;QAClB,OAAO,qBAAmB,CAAC,UAAU,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;IACrF,CAAC;CACD,CAAA;AA7DQ;IADP,QAAQ,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,OAAO,EAAE,CAAC;mDACnC;AAQ1B;IADP,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;oDACH;AAQjB;IADP,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;oDACH;AAQd;IADP,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oEAC8B;AAQpD;IADP,QAAQ,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC;iDAClC;AAQtB;IADP,QAAQ,CAAC,EAAE,IAAI,EAAE,oBAAoB,EAAE,YAAY,EAAE,oBAAoB,CAAC,MAAM,EAAE,CAAC;2DAClC;AAQlD;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;qDAChC;AAQlB;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;sDAC/B;AA/Dd,mBAAmB;IALxB,aAAa,CAAC;QACd,GAAG,EAAE,2BAA2B;QAChC,QAAQ,EAAE,2BAA2B;QACrC,YAAY,EAAE,CAAC,IAAI,CAAC;KACpB,CAAC;GACI,mBAAmB,CAoExB;AAED,mBAAmB,CAAC,MAAM,EAAE,CAAC;AAE7B,eAAe,mBAAmB,CAAC","sourcesContent":["import customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport type { ISegmentedButtonItem } from \"./SegmentedButton.js\";\nimport SegmentedButtonItemTemplate from \"./generated/templates/SegmentedButtonItemTemplate.lit.js\";\n\nimport ToggleButton from \"./ToggleButton.js\";\nimport ButtonDesign from \"./types/ButtonDesign.js\";\nimport ButtonType from \"./types/ButtonType.js\";\nimport ButtonAccessibleRole from \"./types/ButtonAccessibleRole.js\";\nimport { AccessibilityAttributes } from \"./Button.js\";\nimport Icon from \"./Icon.js\";\n\nimport { SEGMENTEDBUTTONITEM_ARIA_DESCRIPTION } from \"./generated/i18n/i18n-defaults.js\";\n\n/**\n * @class\n *\n * ### Overview\n *\n * Users can use the `ui5-segmented-button-item` as part of a `ui5-segmented-button`.\n *\n * Clicking or tapping on a `ui5-segmented-button-item` changes its state to `pressed`.\n * The item returns to its initial state when the user clicks or taps on it again.\n * By applying additional custom CSS-styling classes, apps can give a different style to any\n * `ui5-segmented-button-item`.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/SegmentedButtonItem.js\";`\n * @constructor\n * @extends ToggleButton\n * @implements { ISegmentedButtonItem }\n * @public\n */\n@customElement({\n\ttag: \"ui5-segmented-button-item\",\n\ttemplate: SegmentedButtonItemTemplate,\n\tdependencies: [Icon],\n})\nclass SegmentedButtonItem extends ToggleButton implements ISegmentedButtonItem {\n\t/**\n\t * **Note:** The property is inherited and not supported. If set, it won't take any effect.\n\t * @default \"Default\"\n\t * @public\n\t */\n\t@property({ type: ButtonDesign, defaultValue: ButtonDesign.Default })\n\tdeclare design: `${ButtonDesign}`;\n\n\t/**\n\t * **Note:** The property is inherited and not supported. If set, it won't take any effect.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdeclare iconEnd: boolean;\n\n\t/**\n\t * **Note:** The property is inherited and not supported. If set, it won't take any effect.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdeclare submits: boolean;\n\n\t/**\n\t * **Note:** The property is inherited and not supported. If set, it won't take any effect.\n\t * @default {}\n\t * @public\n\t */\n    @property({ type: Object })\n    declare accessibilityAttributes: AccessibilityAttributes;\n\n\t/**\n\t * **Note:** The property is inherited and not supported. If set, it won't take any effect.\n\t * @default \"Button\"\n\t * @public\n\t */\n\t@property({ type: ButtonType, defaultValue: ButtonType.Button })\n\tdeclare type: `${ButtonType}`;\n\n\t/**\n\t * **Note:** The property is inherited and not supported. If set, it won't take any effect.\n\t * @default \"Button\"\n\t * @public\n\t */\n\t@property({ type: ButtonAccessibleRole, defaultValue: ButtonAccessibleRole.Button })\n\tdeclare accessibleRole: `${ButtonAccessibleRole}`;\n\n\t/**\n\t * Defines the index of the item inside of the SegmentedButton.\n\t * @default 0\n\t * @private\n\t */\n\t@property({ validator: Integer, defaultValue: 0 })\n\tposInSet!: number;\n\n\t/**\n\t * Defines how many items are inside of the SegmentedButton.\n\t * @default 0\n\t * @private\n\t */\n\t@property({ validator: Integer, defaultValue: 0 })\n\tsizeOfSet!: number;\n\n\tget ariaDescription() {\n\t\treturn SegmentedButtonItem.i18nBundle.getText(SEGMENTEDBUTTONITEM_ARIA_DESCRIPTION);\n\t}\n}\n\nSegmentedButtonItem.define();\n\nexport default SegmentedButtonItem;\n"]}