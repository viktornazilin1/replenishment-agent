{"version":3,"file":"ButtonBadge.js","sourceRoot":"","sources":["../src/ButtonBadge.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,UAAU,MAAM,4CAA4C,CAAC;AACpE,OAAO,aAAa,MAAM,0DAA0D,CAAC;AACrF,OAAO,QAAQ,MAAM,qDAAqD,CAAC;AAC3E,OAAO,iBAAiB,MAAM,8BAA8B,CAAC;AAC7D,OAAO,WAAW,MAAM,sDAAsD,CAAC;AAC/E,OAAO,mBAAmB,MAAM,0BAA0B,CAAC;AAE3D,SAAS;AACT,OAAO,cAAc,MAAM,uCAAuC,CAAC;AAEnE;;;;;;;;;;;;GAYG;AAOH,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;IAApC;;QACC;;;;;;;UAOE;QAEF,WAAM,GAA2B,cAAc,CAAC;QAEhD;;;;;;;;UAQE;QAEF,SAAI,GAAW,EAAE,CAAC;IAKnB,CAAC;IAHA,IAAI,aAAa;QAChB,OAAO,IAAI,CAAC,MAAM,KAAK,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IACxE,CAAC;CACD,CAAA;AAjBA;IADC,QAAQ,EAAE;2CACqC;AAYhD;IADC,QAAQ,EAAE;yCACO;AAtBb,WAAW;IANhB,aAAa,CAAC;QACd,GAAG,EAAE,kBAAkB;QACvB,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,mBAAmB;QAC7B,MAAM,EAAE,cAAc;KACtB,CAAC;GACI,WAAW,CA2BhB;AAED,WAAW,CAAC,MAAM,EAAE,CAAC;AAErB,eAAe,WAAW,CAAC","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport ButtonBadgeDesign from \"./types/ButtonBadgeDesign.js\";\nimport jsxRenderer from \"@ui5/webcomponents-base/dist/renderer/JsxRenderer.js\";\nimport ButtonBadgeTemplate from \"./ButtonBadgeTemplate.js\";\n\n// Styles\nimport buttonBadgeCss from \"./generated/themes/ButtonBadge.css.js\";\n\n/**\n * @class\n *\n * The `ui5-button-badge` component defines a badge that appears in the `ui5-button`.\n *\n * ### ES6 Module Import\n *\n * `import \"@ui5/webcomponents/dist/ButtonBadge.js\";`\n * @constructor\n * @extends UI5Element\n * @since 2.7.0\n * @public\n */\n@customElement({\n\ttag: \"ui5-button-badge\",\n\trenderer: jsxRenderer,\n\ttemplate: ButtonBadgeTemplate,\n\tstyles: buttonBadgeCss,\n})\nclass ButtonBadge extends UI5Element {\n\t/**\n     * Defines the badge placement and appearance.\n\t * - **InlineText** - displayed inside the button after its text, and recommended for **compact** density.\n\t * - **OverlayText** - displayed at the top-end corner of the button, and recommended for **cozy** density.\n\t * - **AttentionDot** - displayed at the top-end corner of the button as a dot, and suitable for both **cozy** and **compact** densities.\n     * @since 2.7.0\n\t * @public\n\t*/\n\t@property()\n\tdesign: `${ButtonBadgeDesign}` = \"AttentionDot\";\n\n\t/**\n     * Defines the text of the component.\n\t *\n\t * **Note:** Text is not applied when the `design` property is set to `AttentionDot`.\n\t *\n\t * **Note:** The badge component only accepts numeric values and the \"+\" symbol. Using other characters or formats may result in unpredictable behavior, which is not guaranteed or supported.\n     * @since 2.7.0\n\t * @public\n\t*/\n\t@property()\n\ttext: string = \"\";\n\n\tget effectiveText() {\n\t\treturn this.design === ButtonBadgeDesign.AttentionDot ? \"\" : this.text;\n\t}\n}\n\nButtonBadge.define();\n\nexport default ButtonBadge;\n"]}