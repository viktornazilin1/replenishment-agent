{"version":3,"file":"TreeItemCustom.js","sourceRoot":"","sources":["../src/TreeItemCustom.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,aAAa,MAAM,0DAA0D,CAAC;AACrF,OAAO,WAAW,MAAM,sDAAsD,CAAC;AAC/E,OAAO,QAAQ,MAAM,qDAAqD,CAAC;AAC3E,OAAO,IAAI,MAAM,iDAAiD,CAAC;AACnE,OAAO,EACN,SAAS,EACT,aAAa,EACb,IAAI,EACJ,MAAM,GACN,MAAM,sCAAsC,CAAC;AAC9C,OAAO,YAAY,MAAM,mBAAmB,CAAC;AAE7C,WAAW;AACX,OAAO,sBAAsB,MAAM,6BAA6B,CAAC;AAEjE,SAAS;AACT,OAAO,iBAAiB,MAAM,oCAAoC,CAAC;AAEnE;;;;;;;;;;;;;;;;;;GAkBG;AAOH,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,YAAY;IAAzC;;QACC;;;;WAIG;QAEH,yBAAoB,GAAG,KAAK,CAAC;IAgD9B,CAAC;IAvCA,KAAK,CAAC,UAAU,CAAC,CAAgB;QAChC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAc,CAAC,CAAC,EAAE,CAAC;YAC1E,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,OAAO;QACR,CAAC;QACD,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAEzC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACtC,OAAO;QACR,CAAC;QAED,MAAM,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,QAAQ,CAAC,CAAgB;QACxB,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAEzC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACtC,OAAO;QACR,CAAC;QAED,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED;;OAEG;IACH,IAAI,2BAA2B;QAC9B,OAAO,CAAC,IAAI,CAAC,oBAAoB,IAAI,KAAK,CAAC,2BAA2B,CAAC;IACxE,CAAC;IAED;;OAEG;IACH,IAAI,0BAA0B;QAC7B,OAAO,CAAC,IAAI,CAAC,oBAAoB,IAAI,KAAK,CAAC,0BAA0B,CAAC;IACvE,CAAC;CACD,CAAA;AAhDA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;4DACC;AAO7B;IADC,IAAI,EAAE;+CACsB;AAdxB,cAAc;IANnB,aAAa,CAAC;QACd,QAAQ,EAAE,WAAW;QACrB,GAAG,EAAE,sBAAsB;QAC3B,QAAQ,EAAE,sBAAsB;QAChC,MAAM,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,iBAAiB,CAAC;KAChD,CAAC;GACI,cAAc,CAuDnB;AAED,cAAc,CAAC,MAAM,EAAE,CAAC;AAExB,eAAe,cAAc,CAAC","sourcesContent":["import customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport jsxRenderer from \"@ui5/webcomponents-base/dist/renderer/JsxRenderer.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport {\n\tisTabNext,\n\tisTabPrevious,\n\tisF2,\n\tisDown,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport TreeItemBase from \"./TreeItemBase.js\";\n\n// Template\nimport TreeItemCustomTemplate from \"./TreeItemCustomTemplate.js\";\n\n// Styles\nimport treeItemCustomCss from \"./generated/themes/TreeItem.css.js\";\n\n/**\n * @class\n * The `ui5-tree-item-custom` represents a node in a tree structure, shown as a `ui5-list`.\n *\n * This is the item to use inside a `ui5-tree`.\n * You can represent an arbitrary tree structure by recursively nesting tree items.\n *\n * You can use this item to put any custom content inside the tree item.\n *\n * ### ES6 Module Import\n * `import \"@ui5/webcomponents/dist/TreeItemCustom.js\";`\n * @csspart title - Used to style the title of the tree list item\n * @csspart additionalText - Used to style the additionalText of the tree list item\n * @csspart icon - Used to style the icon of the tree list item\n * @constructor\n * @extends TreeItemBase\n * @public\n * @since 1.9.2\n */\n@customElement({\n\trenderer: jsxRenderer,\n\ttag: \"ui5-tree-item-custom\",\n\ttemplate: TreeItemCustomTemplate,\n\tstyles: [TreeItemBase.styles, treeItemCustomCss],\n})\nclass TreeItemCustom extends TreeItemBase {\n\t/**\n\t * Defines whether the tree list item should display the selection element.\n\t * @public\n\t * @default false\n\t */\n\t@property({ type: Boolean })\n\thideSelectionElement = false;\n\n\t/**\n\t * Defines the content of the `ui5-tree-item`.\n\t * @public\n\t */\n\t@slot()\n\tcontent!: Array<HTMLElement>;\n\n\tasync _onkeydown(e: KeyboardEvent) {\n\t\tif (isDown(e) && this.content?.some(el => el.contains(e.target as Node))) {\n\t\t\te.stopPropagation();\n\t\t\treturn;\n\t\t}\n\t\tconst isTab = isTabNext(e) || isTabPrevious(e);\n\t\tconst isFocused = this.matches(\":focus\");\n\n\t\tif (!isTab && !isFocused && !isF2(e)) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait super._onkeydown(e);\n\t}\n\n\t_onkeyup(e: KeyboardEvent) {\n\t\tconst isTab = isTabNext(e) || isTabPrevious(e);\n\t\tconst isFocused = this.matches(\":focus\");\n\n\t\tif (!isTab && !isFocused && !isF2(e)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper._onkeyup(e);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tget placeSelectionElementBefore() {\n\t\treturn !this.hideSelectionElement && super.placeSelectionElementBefore;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tget placeSelectionElementAfter() {\n\t\treturn !this.hideSelectionElement && super.placeSelectionElementAfter;\n\t}\n}\n\nTreeItemCustom.define();\n\nexport default TreeItemCustom;\n"]}